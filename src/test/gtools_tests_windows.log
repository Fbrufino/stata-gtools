--------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\cygwin64\home\mauricio\hashing\build\gtools_tests_windows.log
  log type:  text
 opened on:  25 Oct 2017, 15:27:37

. do gtools_tests.do

. * ---------------------------------------------------------------------
. * Project: gtools
. * Program: gtools_tests.do
. * Author:  Mauricio Caceres Bravo <mauricio.caceres.bravo@gmail.com>
. * Created: Tue May 16 07:23:02 EDT 2017
. * Updated: Wed Oct 25 10:04:08 EDT 2017
. * Purpose: Unit tests for gtools
. * Version: 0.8.0
. * Manual:  help gtools
. 
. * Stata start-up options
. * ----------------------
. 
. version 13

. clear all

. set more off

. set varabbrev off

. set seed 1729

. set linesize 255

. 
. cap which ralpha

. if ( _rc ) ssc install ralpha

. 
. cap which ftools

. if ( _rc ) ssc install ftools

. 
. cap which unique

. if ( _rc ) ssc install unique

. 
. * Main program wrapper
. * --------------------
. 
. * Generated additional targets; 2.0 seconds
. * +0.575
. 
. 
. program main
  1.     syntax, [CAPture NOIsily legacy *]
  2. 
.     * Set up
.     * ------
. 
.     local  progname tests
  3.     local  start_time "$S_TIME $S_DATE"
  4.     di "Start: `start_time'"
  5. 
.     * Run the things
.     * --------------
. 
.     `capture' `noisily' {
  6.         * qui do test_gcollapse.do
.         * qui do test_gegen.do
.         * qui do test_gisid.do
.         * qui do test_glevelsof.do
.         * qui do test_gunique.do
.         * qui do test_hashsort.do
. 
.         if ( `:list posof "checks" in options' ) {
  7. 
.             unit_test, `noisily' test(checks_corners, `noisily' oncollision(error))
  8. 
.             di ""
  9.             di "-------------------------------------"
 10.             di "Basic unit-tests $S_TIME $S_DATE"
 11.             di "-------------------------------------"
 12. 
.             unit_test, `noisily' test(checks_gcollapse, `noisily' oncollision(error))
 13.             unit_test, `noisily' test(checks_gegen,     `noisily' oncollision(error))
 14.             unit_test, `noisily' test(checks_isid,      `noisily' oncollision(error))
 15.             unit_test, `noisily' test(checks_levelsof,  `noisily' oncollision(error))
 16.             unit_test, `noisily' test(checks_unique,    `noisily' oncollision(error))
 17.             unit_test, `noisily' test(checks_hashsort,  `noisily' oncollision(error))
 18. 
.             di ""
 19.             di "-----------------------------------------------------------"
 20.             di "Consistency checks (vs collapse, egen) $S_TIME $S_DATE"
 21.             di "-----------------------------------------------------------"
 22. 
.             compare_gcollapse, `noisily' oncollision(error)
 23.             compare_egen,      `noisily' oncollision(error)
 24.             compare_isid,      `noisily' oncollision(error)
 25.             compare_levelsof,  `noisily' oncollision(error)
 26.             compare_unique,    `noisily' oncollision(error)
 27.             compare_hashsort,  `noisily' oncollision(error)
 28.         }
 29. 
.         if ( `:list posof "bench_test" in options' ) {
 30.             bench_collapse, collapse fcollapse bench(10)  n(100)    style(sum)    vars(15) oncollision(error)
 31.             bench_collapse, collapse fcollapse bench(10)  n(100)    style(ftools) vars(6)  oncollision(error)
 32.             bench_collapse, collapse fcollapse bench(10)  n(100)    style(full)   vars(1)  oncollision(error)
 33. 
.             bench_collapse, collapse fcollapse bench(0.05) n(10000) style(sum)    vars(15) oncollision(error)
 34.             bench_collapse, collapse fcollapse bench(0.05) n(10000) style(ftools) vars(6)  oncollision(error)
 35.             bench_collapse, collapse fcollapse bench(0.05) n(10000) style(full)   vars(1)  oncollision(error)
 36. 
.             bench_egen,     n(1000) bench(1) `noisily' oncollision(error)
 37.             bench_isid,     n(1000) bench(1) `noisily' oncollision(error)
 38.             bench_levelsof, n(100)  bench(1) `noisily' oncollision(error)
 39.             bench_unique,   n(1000) bench(1) `noisily' oncollision(error)
 40.             bench_hashsort, n(1000) bench(1) `noisily' oncollision(error)
 41.         }
 42. 
.         if ( `:list posof "bench_full" in options' ) {
 43.             bench_collapse, collapse fcollapse bench(1000) n(100)    style(sum)    vars(15) oncollision(error)
 44.             bench_collapse, collapse fcollapse bench(1000) n(100)    style(ftools) vars(6)  oncollision(error)
 45.             bench_collapse, collapse fcollapse bench(1000) n(100)    style(full)   vars(1)  oncollision(error)
 46. 
.             bench_collapse, collapse fcollapse bench(0.1)  n(1000000) style(sum)    vars(15) oncollision(error)
 47.             bench_collapse, collapse fcollapse bench(0.1)  n(1000000) style(ftools) vars(6)  oncollision(error)
 48.             bench_collapse, collapse fcollapse bench(0.1)  n(1000000) style(full)   vars(1)  oncollision(error)
 49. 
.             bench_egen,     n(10000) bench(10)  `noisily' oncollision(error)
 50.             bench_isid,     n(10000) bench(10)  `noisily' oncollision(error)
 51.             bench_levelsof, n(100)   bench(100) `noisily' oncollision(error)
 52.             bench_unique,   n(10000) bench(10)  `noisily' oncollision(error)
 53.             bench_hashsort, n(10000) bench(10)  `noisily' oncollision(error)
 54.         }
 55.     }
 56.     local rc = _rc
 57. 
.     exit_message, rc(`rc') progname(`progname') start_time(`start_time') `capture'
 58.     exit `rc'
 59. end

. 
. * ---------------------------------------------------------------------
. * Aux programs
. 
. capture program drop exit_message

. program exit_message
  1.     syntax, rc(int) progname(str) start_time(str) [CAPture]
  2.     local end_time "$S_TIME $S_DATE"
  3.     local time     "Start: `start_time'" _n(1) "End: `end_time'"
  4.     di ""
  5.     if (`rc' == 0) {
  6.         di "End: $S_TIME $S_DATE"
  7.         local paux      ran
  8.         local message "`progname' finished running" _n(2) "`time'"
  9.         local subject "`progname' `paux'"
 10.     }
 11.     else if ("`capture'" == "") {
 12.         di "WARNING: $S_TIME $S_DATE"
 13.         local paux ran with non-0 exit status
 14.         local message "`progname' ran but Stata gave error code r(`rc')" _n(2) "`time'"
 15.         local subject "`progname' `paux'"
 16.     }
 17.     else {
 18.         di "ERROR: $S_TIME $S_DATE"
 19.         local paux ran with errors
 20.         local message "`progname' stopped with error code r(`rc')" _n(2) "`time'"
 21.         local subject "`progname' `paux'"
 22.     }
 23.     di "`subject'"
 24.     di ""
 25.     di "`message'"
 26. end

. 
. * Wrapper for easy timer use
. cap program drop mytimer

. program mytimer, rclass
  1.     * args number what step
.     syntax anything, [minutes ts]
  2. 
.     tokenize `anything'
  3.     local number `1'
  4.     local what   `2'
  5.     local step   `3'
  6. 
.     if ("`what'" == "end") {
  7.         qui {
  8.             timer clear `number'
  9.             timer off   `number'
 10.         }
 11.         if ("`ts'" == "ts") mytimer_ts `step'
 12.     }
 13.     else if ("`what'" == "info") {
 14.         qui {
 15.             timer off `number'
 16.             timer list `number'
 17.         }
 18.         local seconds = r(t`number')
 19.         local prints  `:di trim("`:di %21.2gc `seconds''")' seconds
 20.         if ("`minutes'" != "") {
 21.             local minutes = `seconds' / 60
 22.             local prints  `:di trim("`:di %21.3gc `minutes''")' minutes
 23.         }
 24.         mytimer_ts Step `step' took `prints'
 25.         qui {
 26.             timer clear `number'
 27.             timer on    `number'
 28.         }
 29.     }
 30.     else {
 31.         qui {
 32.             timer clear `number'
 33.             timer on    `number'
 34.             timer off   `number'
 35.             timer list  `number'
 36.             timer on    `number'
 37.         }
 38.         if ("`ts'" == "ts") mytimer_ts `step'
 39.     }
 40. end

. 
. capture program drop mytimer_ts

. program mytimer_ts
  1.     display _n(1) "{hline 79}"
  2.     if ("`0'" != "") display `"`0'"'
  3.     display `"        Base: $S_FN"'
  4.     display  "        In memory: `:di trim("`:di %21.0gc _N'")' observations"
  5.     display  "        Timestamp: $S_TIME $S_DATE"
  6.     display  "{hline 79}" _n(1)
  7. end

. 
. capture program drop unit_test

. program unit_test
  1.     syntax, test(str) [NOIsily tab(int 4)]
  2.     local tabs `""'
  3.     forvalues i = 1 / `tab' {
  4.         local tabs "`tabs' "
  5.     }
  6.     cap `noisily' `test'
  7.     if ( _rc ) {
  8.         di as error `"`tabs'test(failed): `test'"'
  9.         exit _rc
 10.     }
 11.     else di as txt `"`tabs'test(passed): `test'"'
 12. end

. 
. capture program drop gen_data

. program gen_data
  1.     syntax, [n(int 100) random(int 0) binary(int 0) double]
  2.     clear
  3.     set obs `n'
  4. 
.     * Random strings
.     * --------------
. 
.     qui ralpha str_long,  l(5)
  5.     qui ralpha str_mid,   l(3)
  6.     qui ralpha str_short, l(1)
  7. 
.     * Generate does-what-it-says-on-the-tin variables
.     * -----------------------------------------------
. 
.     gen str32 str_32   = str_long + "this is some string padding"    
  8.     gen str12 str_12   = str_mid  + "padding" + str_short + str_short
  9.     gen str4  str_4    = str_mid  + str_short
 10. 
.     gen long   int1  = floor(uniform() * 1000)
 11.     gen long   int2  = floor(rnormal())
 12.     gen double int3  = floor(rnormal() * 5 + 10)
 13. 
.     gen double double1 = uniform() * 1000
 14.     gen double double2 = rnormal()
 15.     gen double double3 = rnormal() * 5 + 10
 16. 
.     * Mix up string lengths
.     * ---------------------
. 
.    replace str_32 = str_mid + str_short if mod(_n, 4) == 0
 17.    replace str_12 = str_short + str_mid if mod(_n, 4) == 2
 18. 
.     * Insert some blanks
.     * ------------------
. 
.     replace str_32 = "            " in 1 / 10
 19.     replace str_12 = "   "          in 1 / 10
 20.     replace str_4  = " "            in 1 / 10
 21. 
.     replace str_32 = "            " if mod(_n, 21) == 0
 22.     replace str_12 = "   "          if mod(_n, 34) == 0
 23.     replace str_4  = " "            if mod(_n, 55) == 0
 24. 
.     * Missing values
.     * --------------
. 
.     replace str_32 = "" if mod(_n, 10) ==  0
 25.     replace str_12 = "" if mod(_n, 20) ==  0
 26.     replace str_4  = "" if mod(_n, 20) == 10
 27. 
.     replace int2  = .   if mod(_n, 10) ==  0
 28.     replace int3  = .a  if mod(_n, 20) ==  0
 29.     replace int3  = .f  if mod(_n, 20) == 10
 30. 
.     replace double2 = .   if mod(_n, 10) ==  0
 31.     replace double3 = .h  if mod(_n, 20) ==  0
 32.     replace double3 = .p  if mod(_n, 20) == 10
 33. 
.     * Singleton groups
.     * ----------------
. 
.     replace str_32 = "|singleton|" in `n'
 34.     replace str_12 = "|singleton|" in `n'
 35.     replace str_4  = "|singleton|" in `n'
 36. 
.     replace int1    = 99999  in `n'
 37.     replace double1 = 9999.9 in `n'
 38. 
.     replace int3 = .  in 1
 39.     replace int3 = .a in 2
 40.     replace int3 = .b in 3
 41.     replace int3 = .c in 4
 42.     replace int3 = .d in 5
 43.     replace int3 = .e in 6
 44.     replace int3 = .f in 7
 45.     replace int3 = .g in 8
 46.     replace int3 = .h in 9
 47.     replace int3 = .i in 10
 48.     replace int3 = .j in 11
 49.     replace int3 = .k in 12
 50.     replace int3 = .l in 13
 51.     replace int3 = .m in 14
 52.     replace int3 = .n in 15
 53.     replace int3 = .o in 16
 54.     replace int3 = .p in 17
 55.     replace int3 = .q in 18
 56.     replace int3 = .r in 19
 57.     replace int3 = .s in 20
 58.     replace int3 = .t in 21
 59.     replace int3 = .u in 22
 60.     replace int3 = .v in 23
 61.     replace int3 = .w in 24
 62.     replace int3 = .x in 25
 63.     replace int3 = .y in 26
 64.     replace int3 = .z in 27
 65. 
.     replace double3 = .  in 1
 66.     replace double3 = .a in 2
 67.     replace double3 = .b in 3
 68.     replace double3 = .c in 4
 69.     replace double3 = .d in 5
 70.     replace double3 = .e in 6
 71.     replace double3 = .f in 7
 72.     replace double3 = .g in 8
 73.     replace double3 = .h in 9
 74.     replace double3 = .i in 10
 75.     replace double3 = .j in 11
 76.     replace double3 = .k in 12
 77.     replace double3 = .l in 13
 78.     replace double3 = .m in 14
 79.     replace double3 = .n in 15
 80.     replace double3 = .o in 16
 81.     replace double3 = .p in 17
 82.     replace double3 = .q in 18
 83.     replace double3 = .r in 19
 84.     replace double3 = .s in 20
 85.     replace double3 = .t in 21
 86.     replace double3 = .u in 22
 87.     replace double3 = .v in 23
 88.     replace double3 = .w in 24
 89.     replace double3 = .x in 25
 90.     replace double3 = .y in 26
 91.     replace double3 = .z in 27
 92. 
.     if ( `random' > 0 ) {
 93.         forvalues i = 1 / `random' {
 94.             gen `double' random`i' = rnormal() * 10
 95.             replace random`i' = . if mod(_n, 20) == 0
 96.             if ( `binary' ) {
 97.                 replace random`i' = floor(runiform() * 1.99) if _n < `=_N / 2'
 98.             }
 99.         }
100.     }
101. end

. 
. capture program drop checks_gcollapse

. program checks_gcollapse
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2.     di _n(1) "{hline 80}" _n(1) "checks_gcollapse, `options'" _n(1) "{hline 80}" _n(1)
  3. 
.     qui `noisily' gen_data, n(5000) random(2)
  4.     qui expand 2
  5.     gen long ix = _n
  6. 
.     checks_inner_collapse, `options'
  7. 
.     checks_inner_collapse -str_12,              `options'
  8.     checks_inner_collapse str_12 -str_32,       `options'
  9.     checks_inner_collapse str_12 -str_32 str_4, `options'
 10. 
.     checks_inner_collapse -double1,                 `options'
 11.     checks_inner_collapse double1 -double2,         `options'
 12.     checks_inner_collapse double1 -double2 double3, `options'
 13. 
.     checks_inner_collapse -int1,           `options'
 14.     checks_inner_collapse int1 -int2,      `options'
 15.     checks_inner_collapse int1 -int2 int3, `options'
 16. 
.     checks_inner_collapse -int1 -str_32 -double1,                                         `options'
 17.     checks_inner_collapse int1 -str_32 double1 -int2 str_12 -double2,                     `options'
 18.     checks_inner_collapse int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3, `options'
 19. end

. 
. capture program drop checks_inner_collapse

. program checks_inner_collapse
  1.     syntax [anything], [tol(real 1e-6) *]
  2. 
.     local stats sum mean sd max min count median iqr percent first last firstnm lastnm semean sebinomial sepoisson
  3.     local percentiles p1 p10 p30.5 p50 p70.5 p90 p99
  4. 
.     local collapse_str ""
  5.     foreach stat of local stats {
  6.         local collapse_str `collapse_str' (`stat') r1_`stat' = random1
  7.         local collapse_str `collapse_str' (`stat') r2_`stat' = random2
  8.     }
  9.     foreach pct of local percentiles {
 10.         local collapse_str `collapse_str' (`pct') r1_`:subinstr local pct "." "_", all' = random1
 11.         local collapse_str `collapse_str' (`pct') r2_`:subinstr local pct "." "_", all' = random2
 12.     }
 13. 
.     preserve
 14.         gcollapse `collapse_str', by(`anything') verbose `options'
 15.     restore, preserve
 16.         gcollapse `collapse_str', by(`anything') verbose benchmark `options'
 17.     restore, preserve
 18.         gcollapse `collapse_str', by(`anything') verbose forceio `options'
 19.     restore, preserve
 20.         gcollapse `collapse_str', by(`anything') verbose forcemem `options'
 21.     restore, preserve
 22.         gcollapse `collapse_str', by(`anything') verbose benchmark cw `options'
 23.     restore, preserve
 24.         gcollapse `collapse_str', by(`anything') verbose benchmark fast `options'
 25.     restore, preserve
 26.         gcollapse `collapse_str', by(`anything') double `options'
 27.     restore, preserve
 28.         gcollapse `collapse_str', by(`anything') merge `options'
 29.     restore, preserve
 30.         gcollapse `collapse_str', by(`anything') verbose `options' benchmark debug_io_check(0)
 31.     restore
 32. end

. 
. ***********************************************************************
. *                            Corner cases                             *
. ***********************************************************************
. 
. capture program drop checks_corners

. program checks_corners
  1.     syntax, [*]
  2.     di _n(1) "{hline 80}" _n(1) "checks_corners `options'" _n(1) "{hline 80}" _n(1)
  3. 
.     qui {
  4.         sysuse auto, clear
  5.         gen price2 = price
  6.         cap noi gcollapse price = price2 if price < 0
  7.         assert _rc == 2000
  8.     }
  9. 
.     qui {
 10.         sysuse auto, clear
 11.         gen price2 = price
 12.         gcollapse price = price2
 13.     }
 14. 
.     qui {
 15.         sysuse auto, clear
 16.         gen price2 = price
 17.         gcollapse price = price2, by(make) v b `options'
 18.         gcollapse price in 1,     by(make) v b `options'
 19.     }
 20. 
.     qui {
 21.         clear
 22.         set matsize 100
 23.         set obs 10
 24.         forvalues i = 1/101 {
 25.             gen x`i' = 10
 26.         }
 27.         gen zz = runiform()
 28.         preserve
 29.             gcollapse zz, by(x*) `options'
 30.         restore, preserve
 31.             gcollapse x*, by(zz) `options'
 32.         restore
 33.     }
 34. 
.     qui {
 35.         clear
 36.         set matsize 400
 37.         set obs 10
 38.         forvalues i = 1/300 {
 39.             gen x`i' = 10
 40.         }
 41.         gen zz = runiform()
 42.         preserve
 43.             gcollapse zz, by(x*) `options'
 44.         restore, preserve
 45.             gcollapse x*, by(zz) `options'
 46.         restore
 47.     }
 48. 
.     qui {
 49.         clear
 50.         set obs 10
 51.         forvalues i = 1/800 {
 52.             gen x`i' = 10
 53.         }
 54.         gen zz = runiform()
 55.         preserve
 56.             gcollapse zz, by(x*) `options'
 57.         restore, preserve
 58.             gcollapse x*, by(zz) `options'
 59.         restore
 60. 
.         * Only fails in Stata/IC
.         * gen x801 = 10
.         * preserve
.         *     collapse zz, by(x*) `options'
.         * restore, preserve
.         *     collapse x*, by(zz) `options'
.         * restore
.     }
 61. 
.     di ""
 62.     di as txt "Passed! checks_corners `options'"
 63. end

. 
. ***********************************************************************
. *                               Compare                               *
. ***********************************************************************
. 
. capture program drop compare_gcollapse

. program compare_gcollapse
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2. 
.     * This should be ignored for compare_inner_gcollapse_gegen bc of merge
.     local debug_io debug_io_check(0) debug_io_threshold(0.0001)
  3. 
.     qui `noisily' gen_data, n(1000) random(2)
  4.     qui expand 100
  5. 
.     di _n(1) "{hline 80}" _n(1) "consistency_gcollapse_gegen, `options'" _n(1) "{hline 80}" _n(1)
  6. 
.     compare_inner_gcollapse_gegen, `options' tol(`tol')
  7. 
.     compare_inner_gcollapse_gegen -str_12,              `options' tol(`tol') `debug_io'
  8.     compare_inner_gcollapse_gegen str_12 -str_32,       `options' tol(`tol')
  9.     compare_inner_gcollapse_gegen str_12 -str_32 str_4, `options' tol(`tol')
 10. 
.     compare_inner_gcollapse_gegen -double1,                 `options' tol(`tol') `debug_io'
 11.     compare_inner_gcollapse_gegen double1 -double2,         `options' tol(`tol')
 12.     compare_inner_gcollapse_gegen double1 -double2 double3, `options' tol(`tol')
 13. 
.     compare_inner_gcollapse_gegen -int1,           `options' tol(`tol') `debug_io'
 14.     compare_inner_gcollapse_gegen int1 -int2,      `options' tol(`tol')
 15.     compare_inner_gcollapse_gegen int1 -int2 int3, `options' tol(`tol')
 16. 
.     compare_inner_gcollapse_gegen -int1 -str_32 -double1, `options' tol(`tol') `debug_io'
 17.     compare_inner_gcollapse_gegen int1 -str_32 double1 -int2 str_12 -double2, `options' tol(`tol')
 18.     compare_inner_gcollapse_gegen int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3, `options' tol(`tol')
 19. 
.     qui `noisily' gen_data, n(1000) random(2) binary(1)
 20.     qui expand 50
 21. 
.     di _n(1) "{hline 80}" _n(1) "consistency_collapse, `options'" _n(1) "{hline 80}" _n(1)
 22. 
.     compare_inner_collapse, `options' tol(`tol')
 23. 
.     compare_inner_collapse str_12,              `options' tol(`tol') forcemem
 24.     compare_inner_collapse str_12 str_32,       `options' tol(`tol') forceio
 25.     compare_inner_collapse str_12 str_32 str_4, `options' tol(`tol') `debug_io'
 26. 
.     compare_inner_collapse double1,                 `options' tol(`tol') forcemem
 27.     compare_inner_collapse double1 double2,         `options' tol(`tol') forceio
 28.     compare_inner_collapse double1 double2 double3, `options' tol(`tol') `debug_io'
 29. 
.     compare_inner_collapse int1,           `options' tol(`tol') forcemem
 30.     compare_inner_collapse int1 int2,      `options' tol(`tol') forceio
 31.     compare_inner_collapse int1 int2 int3, `options' tol(`tol') `debug_io'
 32. 
.     compare_inner_collapse int1 str_32 double1,                                        `options' tol(`tol') forcemem
 33.     compare_inner_collapse int1 str_32 double1 int2 str_12 double2,                    `options' tol(`tol') forceio
 34.     compare_inner_collapse int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options' tol(`tol') `debug_io'
 35. end

. 
. capture program drop compare_inner_gcollapse_gegen

. program compare_inner_gcollapse_gegen
  1.     syntax [anything], [tol(real 1e-6) *]
  2. 
.     local N = trim("`: di %15.0gc _N'")
  3.     local hlen = 45 + length("`anything'") + length("`N'")
  4.     di _n(2) "Checking gegen vs gcollapse. N = `N'; varlist = `anything'" _n(1) "{hline `hlen'}"
  5. 
.     preserve
  6.         _compare_inner_gcollapse_gegen `anything', `options' tol(`tol')
  7.     restore, preserve
  8.         local in1 = ceil((0.00 + 0.25 * runiform()) * `=_N')
  9.         local in2 = ceil((0.75 + 0.25 * runiform()) * `=_N')
 10.         local from = cond(`in1' < `in2', `in1', `in2')
 11.         local to   = cond(`in1' > `in2', `in1', `in2')
 12.         _compare_inner_gcollapse_gegen  `anything' in `from' / `to', `options' tol(`tol')
 13.     restore, preserve
 14.         _compare_inner_gcollapse_gegen `anything' if random2 > 0, `options' tol(`tol')
 15.     restore, preserve
 16.         local in1 = ceil((0.00 + 0.25 * runiform()) * `=_N')
 17.         local in2 = ceil((0.75 + 0.25 * runiform()) * `=_N')
 18.         local from = cond(`in1' < `in2', `in1', `in2')
 19.         local to   = cond(`in1' > `in2', `in1', `in2')
 20.         _compare_inner_gcollapse_gegen `anything' if random2 < 0 in `from' / `to', `options' tol(`tol')
 21.     restore
 22. end

. 
. capture program drop _compare_inner_gcollapse_gegen

. program _compare_inner_gcollapse_gegen
  1.     syntax [anything] [if] [in], [tol(real 1e-6) *]
  2. 
.     gegen id = group(`anything'), missing
  3. 
.     gegen double mean       = mean       (random1) `if' `in',  by(`anything')
  4.     gegen double sum        = sum        (random1) `if' `in',  by(`anything')
  5.     gegen double median     = median     (random1) `if' `in',  by(`anything')
  6.     gegen double sd         = sd         (random1) `if' `in',  by(`anything')
  7.     gegen double iqr        = iqr        (random1) `if' `in',  by(`anything')
  8.     gegen double first      = first      (random1) `if' `in',  by(`anything')
  9.     gegen double last       = last       (random1) `if' `in',  by(`anything')
 10.     gegen double firstnm    = firstnm    (random1) `if' `in',  by(`anything')
 11.     gegen double lastnm     = lastnm     (random1) `if' `in',  by(`anything')
 12.     gegen double semean     = semean     (random1) `if' `in',  by(`anything')
 13.     gegen double sebinomial = sebinomial (random1) `if' `in',  by(`anything')
 14.     gegen double sepoisson  = sepoisson  (random1) `if' `in',  by(`anything')
 15.     gegen double q10        = pctile     (random1) `if' `in',  by(`anything') p(10.5)
 16.     gegen double q30        = pctile     (random1) `if' `in',  by(`anything') p(30)
 17.     gegen double q70        = pctile     (random1) `if' `in',  by(`anything') p(70)
 18.     gegen double q90        = pctile     (random1) `if' `in',  by(`anything') p(90.5)
 19. 
.     qui `noisily' {
 20.         gcollapse (mean)       g_mean       = random1  ///
>                   (sum)        g_sum        = random1  ///
>                   (median)     g_median     = random1  ///
>                   (sd)         g_sd         = random1  ///
>                   (iqr)        g_iqr        = random1  ///
>                   (first)      g_first      = random1  ///
>                   (last)       g_last       = random1  ///
>                   (firstnm)    g_firstnm    = random1  ///
>                   (lastnm)     g_lastnm     = random1  ///
>                   (semean)     g_semean     = random1  ///
>                   (sebinomial) g_sebinomial = random1  ///
>                   (sepoisson)  g_sepoisson  = random1  ///
>                   (p10.5)      g_q10        = random1  ///
>                   (p30)        g_q30        = random1  ///
>                   (p70)        g_q70        = random1  ///
>                   (p90.5)      g_q90        = random1 `if' `in', by(id) benchmark verbose `options' merge double
 21.     }
 22. 
.     if ( "`if'`in'" == "" ) {
 23.         di _n(1) "Checking full range: `anything'"
 24.     }
 25.     else if ( "`if'`in'" != "" ) {
 26.         di _n(1) "Checking [`if' `in'] range: `anything'"
 27.     }
 28. 
.     foreach fun in mean sum median sd iqr first last firstnm lastnm semean sebinomial sepoisson q10 q30 q70 q90 {
 29.         cap noi assert (g_`fun' == `fun') | abs(g_`fun' - `fun') < `tol'
 30.         if ( _rc ) {
 31.             recast double g_`fun' `fun'
 32.             cap noi assert (g_`fun' == `fun') | abs(g_`fun' - `fun') < `tol'
 33.             if ( _rc ) {
 34.                 di as err "    compare_gegen_gcollapse (failed): `fun' yielded different results (tol = `tol')"
 35.                 exit _rc
 36.             }
 37.             else di as txt "    compare_gegen_gcollapse (passed): `fun' yielded same results (tol = `tol')"
 38.         }
 39.         else di as txt "    compare_gegen_gcollapse (passed): `fun' yielded same results (tol = `tol')"
 40.     }
 41. end

. 
. capture program drop compare_inner_collapse

. program compare_inner_collapse
  1.     syntax [anything], [tol(real 1e-6) *]
  2. 
.     local N = trim("`: di %15.0gc _N'")
  3.     local hlen = 35 + length("`anything'") + length("`N'")
  4.     di _n(2) "Checking collapse. N = `N'; varlist = `anything'" _n(1) "{hline `hlen'}"
  5. 
.     preserve
  6.         _compare_inner_collapse `anything', `options' tol(`tol')
  7.     restore, preserve
  8.         local in1 = ceil((0.00 + 0.25 * runiform()) * `=_N')
  9.         local in2 = ceil((0.75 + 0.25 * runiform()) * `=_N')
 10.         local from = cond(`in1' < `in2', `in1', `in2')
 11.         local to   = cond(`in1' > `in2', `in1', `in2')
 12.         _compare_inner_collapse  `anything' in `from' / `to', `options' tol(`tol')
 13.     restore, preserve
 14.         _compare_inner_collapse `anything' if random2 > 0, `options' tol(`tol')
 15.     restore, preserve
 16.         local in1 = ceil((0.00 + 0.25 * runiform()) * `=_N')
 17.         local in2 = ceil((0.75 + 0.25 * runiform()) * `=_N')
 18.         local from = cond(`in1' < `in2', `in1', `in2')
 19.         local to   = cond(`in1' > `in2', `in1', `in2')
 20.         _compare_inner_collapse `anything' if random2 < 0 in `from' / `to', `options' tol(`tol')
 21.     restore
 22. end

. 
. capture program drop _compare_inner_collapse

. program _compare_inner_collapse
  1.     syntax [anything] [if] [in], [tol(real 1e-6) *]
  2. 
.     local stats sum mean sd max min count percent first last firstnm lastnm median iqr semean sebinomial sepoisson
  3.     local percentiles p1 p13 p30 p50 p70 p87 p99
  4.     local collapse_str ""
  5.     foreach stat of local stats {
  6.         local collapse_str `collapse_str' (`stat') r1_`stat' = random1
  7.         local collapse_str `collapse_str' (`stat') r2_`stat' = random2
  8.     }
  9.     foreach pct of local percentiles {
 10.         local collapse_str `collapse_str' (`pct') r1_`pct' = random1
 11.         local collapse_str `collapse_str' (`pct') r2_`pct' = random2
 12.     }
 13. 
.     preserve
 14.         timer clear
 15.         timer on 43
 16.         qui `noisily' gcollapse `collapse_str', by(`anything') verbose benchmark `options'
 17.         timer off 43
 18.         qui timer list
 19.         local time_gcollapse = r(t43)
 20.         tempfile fg
 21.         qui save `fg'
 22.     restore
 23. 
.     preserve
 24.         timer clear
 25.         timer on 42
 26.         qui `noisily' collapse `collapse_str', by(`anything')
 27.         timer off 42
 28.         qui timer list
 29.         local time_gcollapse = r(t42)
 30.         tempfile fc
 31.         qui save `fc'
 32.     restore
 33. 
.     preserve
 34.     use `fc', clear
 35.         local bad_any = 0
 36.         local bad `anything'
 37.         local by  `anything'
 38.         foreach var in `stats' `percentiles' {
 39.             rename r1_`var' c_r1_`var'
 40.             rename r2_`var' c_r2_`var'
 41.         }
 42.         if ( "`by'" == "" ) {
 43.             qui merge 1:1 _n using `fg', assert(3)
 44.         }
 45.         else {
 46.             qui merge 1:1 `by' using `fg', assert(3)
 47.         }
 48.         foreach var in `stats' `percentiles' {
 49.             qui count if ( (abs(r1_`var' - c_r1_`var') > `tol') & (r1_`var' != c_r1_`var'))
 50.             if ( `r(N)' > 0 ) {
 51.                 gen bad_r1_`var' = abs(r1_`var' - c_r1_`var') * (r1_`var' != c_r1_`var')
 52.                 local bad `bad' *r1_`var'
 53.                 di "    r1_`var' has `:di r(N)' mismatches".
 54.                 local bad_any = 1
 55.                 order *r1_`var'
 56.             }
 57. 
.             qui count if ( (abs(r2_`var' - c_r2_`var') > `tol') & (r2_`var' != c_r2_`var'))
 58.             if ( `r(N)' > 0 ) {
 59.                 gen bad_r2_`var' = abs(r2_`var' - c_r2_`var') * (r2_`var' != c_r2_`var')
 60.                 local bad `bad' *r2_`var'
 61.                 di "    r2_`var' has `:di r(N)' mismatches".
 62.                 local bad_any = 1
 63.                 order *r2_`var'
 64.             }
 65.         }
 66.         if ( `bad_any' ) {
 67.             if ( "`if'`in'" == "" ) {
 68.                 di "    compare_collapse (failed): full range, `anything'"
 69.             }
 70.             else if ( "`if'`in'" != "" ) {
 71.                 di "    compare_collapse (failed): [`if' `in'], `anything'"
 72.             }
 73.             order `bad'
 74.             egen bad_any = rowmax(bad_*)
 75.             l *count* *mean* `bad' if bad_any
 76.             sum bad_*
 77.             desc
 78.             exit 9
 79.         }
 80.         else {
 81.             if ( "`if'`in'" == "" ) {
 82.                 di "    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = `tol')"
 83.             }
 84.             else if ( "`if'`in'" != "" ) {
 85.                 di "    compare_collapse (passed): [`if' `in'], gcollapse results equal to collapse (tol = `tol')"
 86.             }
 87.         }
 88.     restore
 89. end

. 
. ***********************************************************************
. *                             Benchmarks                              *
. ***********************************************************************
. 
. capture program drop bench_collapse

. program bench_collapse
  1.     syntax, [tol(real 1e-6) bench(real 1) n(int 1000) NOIsily style(str) vars(int 1) collapse fcollapse *]
  2. 
.     qui gen_data, n(`n') random(`vars') double
  3.     qui expand `=100 * `bench''
  4.     qui hashsort random1
  5. 
.     local N = trim("`: di %15.0gc _N'")
  6.     local J = trim("`: di %15.0gc `n''")
  7. 
.     if ( "`style'" == "full" ) {
  8.         local ststr "all available plus percentiles 10, 30, 70, 90"
  9.     }
 10.     else if ( "`style'" == "ftools" ) {
 11.         local ststr "mean median min max"
 12.     }
 13.     else {
 14.         local ststr "sum"
 15.     }
 16. 
.     if ( `vars' > 1 ) {
 17.         local vstr "x1-x`vars'"
 18.     }
 19.     else {
 20.         local vstr x1
 21.     }
 22. 
.     di as txt _n(1)
 23.     di as txt "Benchmark vs collapse (in seconds)"
 24.     di as txt "    - obs:     `N'"
 25.     di as txt "    - groups:  `J'"
 26.     di as txt "    - vars:    `vstr' ~ N(0, 10)"
 27.     di as txt "    - stats:   `ststr'"
 28.     di as txt "    - options: fast"
 29.     di as txt _n(1)
 30.     di as txt "    collapse | fcollapse | gcollapse | ratio (c/g) | ratio (f/g) | varlist"
 31.     di as txt "    -------- | --------- | --------- | ----------- | ----------- | -------"
 32. 
.     local options `options' style(`style') vars(`vars')
 33.     versus_collapse,                         `options' `collapse' `fcollapse'
 34.     versus_collapse str_12 str_32 str_4,     `options' `collapse' `fcollapse'
 35.     versus_collapse double1 double2 double3, `options' `collapse' `fcollapse'
 36.     versus_collapse int1 int2 int3,          `options' `collapse' `fcollapse'
 37.     versus_collapse int1 str_32 double1,     `options' `collapse'
 38. 
.     di _n(1) "{hline 80}" _n(1) "bench_collapse, `options'" _n(1) "{hline 80}" _n(1)
 39. end

. 
. capture program drop versus_collapse

. program versus_collapse, rclass
  1.     syntax [anything], [fcollapse collapse style(str) vars(int 1) *]
  2. 
.     local stats       ""
  3.     local percentiles ""
  4. 
.     if ( "`style'" == "full" ) {
  5.         local stats sum mean sd max min count median iqr percent first last firstnm lastnm
  6.         local percentiles p10 p30 p70 p90
  7.     }
  8.     else if ( "`style'" == "ftools" ) {
  9.         local stats mean median min max
 10.     }
 11.     else {
 12.         local stats sum
 13.     }
 14. 
.     local collapse_str ""
 15.     foreach stat of local stats {
 16.         forvalues k = 1 / `vars' {
 17.             local collapse_str `collapse_str' (`stat') r`k'_`stat' = random`k'
 18.         }
 19.     }
 20.     foreach pct of local percentiles {
 21.         forvalues k = 1 / `vars' {
 22.             local collapse_str `collapse_str' (`pct') r`k'_`pct' = random`k'
 23.         }
 24.     }
 25. 
.     if ( "`collapse'" == "collapse" ) {
 26.     preserve
 27.         timer clear
 28.         timer on 42
 29.         qui collapse `collapse_str', by(`anything') fast
 30.         timer off 42
 31.         qui timer list
 32.         local time_collapse = r(t42)
 33.     restore
 34.     }
 35.     else {
 36.         local time_collapse = .
 37.     }
 38. 
.     preserve
 39.         timer clear
 40.         timer on 43
 41.         qui gcollapse `collapse_str', by(`anything') `options' fast
 42.         timer off 43
 43.         qui timer list
 44.         local time_gcollapse = r(t43)
 45.     restore
 46. 
.     if ( "`fcollapse'" == "fcollapse" ) {
 47.     preserve
 48.         timer clear
 49.         timer on 44
 50.         qui fcollapse `collapse_str', by(`anything') fast
 51.         timer off 44
 52.         qui timer list
 53.         local time_fcollapse = r(t44)
 54.     restore
 55.     }
 56.     else {
 57.         local time_fcollapse = .
 58.     }
 59. 
.     local rs = `time_collapse'  / `time_gcollapse'
 60.     local rf = `time_fcollapse' / `time_gcollapse'
 61.     di as txt "    `:di %8.3g `time_collapse'' | `:di %9.3g `time_fcollapse'' | `:di %9.3g `time_gcollapse'' | `:di %11.3g `rs'' | `:di %11.3g `rf'' | `anything'"
 62. end

. capture program drop checks_gegen

. program checks_gegen
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2.     di _n(1) "{hline 80}" _n(1) "checks_egen, `options'" _n(1) "{hline 80}" _n(1)
  3. 
.     qui `noisily' gen_data, n(5000) random(2)
  4.     qui expand 2
  5.     gen long ix = _n
  6. 
.     checks_inner_egen, `options'
  7. 
.     checks_inner_egen -str_12,              `options'
  8.     checks_inner_egen str_12 -str_32,       `options'
  9.     checks_inner_egen str_12 -str_32 str_4, `options'
 10. 
.     checks_inner_egen -double1,                 `options'
 11.     checks_inner_egen double1 -double2,         `options'
 12.     checks_inner_egen double1 -double2 double3, `options'
 13. 
.     checks_inner_egen -int1,           `options'
 14.     checks_inner_egen int1 -int2,      `options'
 15.     checks_inner_egen int1 -int2 int3, `options'
 16. 
.     checks_inner_egen -int1 -str_32 -double1,                                         `options'
 17.     checks_inner_egen int1 -str_32 double1 -int2 str_12 -double2,                     `options'
 18.     checks_inner_egen int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3, `options'
 19. 
.     clear
 20.     gen x = 1
 21.     cap gegen y = group(x)
 22.     assert _rc == 111
 23. 
.     clear
 24.     set obs 10
 25.     gen x = 1
 26.     gegen y = group(x) if x > 1
 27.     gegen z = tag(x)   if x > 1
 28. end

. 
. capture program drop checks_inner_egen

. program checks_inner_egen
  1.     syntax [anything], [tol(real 1e-6) *]
  2. 
.     local stats total sum mean sd max min count median iqr percent first last firstnm lastnm
  3.     local percentiles 1 10 30.5 50 70.5 90 99
  4. 
.     tempvar gvar
  5.     foreach fun of local stats {
  6.         `noisily' gegen `gvar' = `fun'(random1), by(`anything') replace `options'
  7.         `noisily' gegen `gvar' = `fun'(random*), by(`anything') replace `options'
  8.     }
  9. 
.     foreach p in `percentiles' {
 10.         `noisily' gegen `gvar' = pctile(random1), p(`p') by(`anything') replace `options'
 11.         `noisily' gegen `gvar' = pctile(random*), p(`p') by(`anything') replace `options'
 12.     }
 13. 
.     if ( "`anything'" != "" ) {
 14.         `noisily' gegen `gvar' = tag(`anything'),   replace `options'
 15.         `noisily' gegen `gvar' = group(`anything'), replace `options'
 16.         `noisily' gegen `gvar' = count(1), by(`anything') replace `options'
 17.     }
 18. end

. 
. ***********************************************************************
. *                               Compare                               *
. ***********************************************************************
. 
. capture program drop compare_egen

. program compare_egen
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2.     di _n(1) "{hline 80}" _n(1) "consistency_egen, `options'" _n(1) "{hline 80}" _n(1)
  3. 
.     qui `noisily' gen_data, n(1000) random(2)
  4.     qui expand 100
  5. 
.     compare_inner_egen, `options' tol(`tol')
  6. 
.     compare_inner_egen str_12,              `options' tol(`tol')
  7.     compare_inner_egen str_12 str_32,       `options' tol(`tol')
  8.     compare_inner_egen str_12 str_32 str_4, `options' tol(`tol')
  9. 
.     compare_inner_egen double1,                 `options' tol(`tol')
 10.     compare_inner_egen double1 double2,         `options' tol(`tol')
 11.     compare_inner_egen double1 double2 double3, `options' tol(`tol')
 12. 
.     compare_inner_egen int1,           `options' tol(`tol')
 13.     compare_inner_egen int1 int2,      `options' tol(`tol')
 14.     compare_inner_egen int1 int2 int3, `options' tol(`tol')
 15. 
.     compare_inner_egen int1 str_32 double1,                                        `options' tol(`tol')
 16.     compare_inner_egen int1 str_32 double1 int2 str_12 double2,                    `options' tol(`tol')
 17.     compare_inner_egen int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options' tol(`tol')
 18. end

. 
. capture program drop compare_inner_egen

. program compare_inner_egen
  1.     syntax [anything], [tol(real 1e-6) *]
  2. 
.     local N = trim("`: di %15.0gc _N'")
  3.     local hlen = 31 + length("`anything'") + length("`N'")
  4. 
.     di _n(2) "Checking egen. N = `N'; varlist = `anything'" _n(1) "{hline `hlen'}"
  5. 
.     _compare_inner_egen `anything', `options' tol(`tol')
  6. 
.     local in1 = ceil((0.00 + 0.25 * runiform()) * `=_N')
  7.     local in2 = ceil((0.75 + 0.25 * runiform()) * `=_N')
  8.     local from = cond(`in1' < `in2', `in1', `in2')
  9.     local to   = cond(`in1' > `in2', `in1', `in2')
 10.     _compare_inner_egen `anything' in `from' / `to', `options' tol(`tol')
 11. 
.     _compare_inner_egen `anything' if random2 > 0, `options' tol(`tol')
 12. 
.     local in1 = ceil((0.00 + 0.25 * runiform()) * `=_N')
 13.     local in2 = ceil((0.75 + 0.25 * runiform()) * `=_N')
 14.     local from = cond(`in1' < `in2', `in1', `in2')
 15.     local to   = cond(`in1' > `in2', `in1', `in2')
 16.     _compare_inner_egen `anything' if random2 < 0 in `from' / `to', `options' tol(`tol')
 17. end

. 
. capture program drop _compare_inner_egen

. program _compare_inner_egen
  1.     syntax [anything] [if] [in], [tol(real 1e-6) *]
  2. 
.     local stats       total sum mean sd max min count median iqr
  3.     local percentiles 1 10 30 50 70 90 99
  4. 
.     cap drop g*_*
  5.     cap drop c*_*
  6. 
.     tempvar g_fun
  7. 
.     if ( "`if'`in'" == "" ) {
  8.         di _n(1) "Checking full egen range: `anything'"
  9.     }
 10.     else if ( "`if'`in'" != "" ) {
 11.         di _n(1) "Checking [`if' `in'] egen range: `anything'"
 12.     }
 13. 
.     foreach fun of local stats {
 14.         timer clear
 15.         timer on 43
 16.         qui `noisily' gegen float `g_fun' = `fun'(random1) `if' `in', by(`anything') replace `options'
 17.         timer off 43
 18.         qui timer list
 19.         local time_gegen = r(t43)
 20. 
. 
.         timer clear
 21.         timer on 42
 22.         qui `noisily'  egen float c_`fun' = `fun'(random1) `if' `in', by(`anything')
 23.         timer off 42
 24.         qui timer list
 25.         local time_egen = r(t42)
 26. 
.         local rs = `time_egen'  / `time_gegen'
 27.         local tinfo `:di %4.3g `time_gegen'' vs `:di %4.3g `time_egen'', ratio `:di %4.3g `rs''
 28. 
.         cap noi assert (`g_fun' == c_`fun') | abs(`g_fun' - c_`fun') < `tol'
 29.         if ( _rc ) {
 30.             di as err "    compare_egen (failed): gegen `fun' not equal to egen (tol = `tol'; `tinfo')"
 31.             exit _rc
 32.         }
 33.         else di as txt "    compare_egen (passed): gegen `fun' results similar to egen (tol = `tol'; `tinfo')"
 34.     }
 35. 
.     foreach p in `percentiles' {
 36.         timer clear
 37.         timer on 43
 38.         qui  `noisily' gegen float `g_fun' = pctile(random1) `if' `in', by(`anything') p(`p') replace `options'
 39.         timer off 43
 40.         qui timer list
 41.         local time_gegen = r(t43)
 42. 
. 
.         timer clear
 43.         timer on 42
 44.         qui  `noisily'  egen float c_p`p'  = pctile(random1) `if' `in', by(`anything') p(`p')
 45.         timer off 42
 46.         qui timer list
 47.         local time_egen = r(t42)
 48. 
.         local rs = `time_egen'  / `time_gegen'
 49.         local tinfo `:di %4.3g `time_gegen'' vs `:di %4.3g `time_egen'', ratio `:di %4.3g `rs''
 50. 
.         cap noi assert (`g_fun' == c_p`p') | abs(`g_fun' - c_p`p') < `tol'
 51.         if ( _rc ) {
 52.             di as err "    compare_egen (failed): gegen percentile `p' not equal to egen (tol = `tol'; `tinfo')"
 53.             exit _rc
 54.         }
 55.         else di as txt "    compare_egen (passed): gegen percentile `p' results similar to egen (tol = `tol'; `tinfo')"
 56.     }
 57. 
.     foreach fun in tag group {
 58.         timer clear
 59.         timer on 43
 60.         qui  `noisily' gegen float `g_fun' = `fun'(`anything') `if' `in', replace `options'
 61.         timer off 43
 62.         qui timer list
 63.         local time_gegen = r(t43)
 64. 
. 
.         timer clear
 65.         timer on 42
 66.         qui  `noisily'  egen float c_`fun' = `fun'(`anything') `if' `in'
 67.         timer off 42
 68.         qui timer list
 69.         local time_egen = r(t42)
 70. 
.         local rs = `time_egen'  / `time_gegen'
 71.         local tinfo `:di %4.3g `time_gegen'' vs `:di %4.3g `time_egen'', ratio `:di %4.3g `rs''
 72. 
.         cap noi assert (`g_fun' == c_`fun') | abs(`g_fun' - c_`fun') < `tol'
 73.         if ( _rc ) {
 74.             di as err "    compare_egen (failed): gegen `fun' not equal to egen (tol = `tol'; `tinfo')"
 75.             exit _rc
 76.         }
 77.         else di as txt "    compare_egen (passed): gegen `fun' results similar to egen (tol = `tol'; `tinfo')"
 78. 
.         timer clear
 79.         timer on 43
 80.         qui  `noisily' gegen float `g_fun' = `fun'(`anything') `if' `in', missing replace `options'
 81.         timer off 43
 82.         qui timer list
 83.         local time_gegen = r(t43)
 84. 
. 
.         timer clear
 85.         timer on 42
 86.         qui  `noisily'  egen float c_`fun'2 = `fun'(`anything') `if' `in', missing
 87.         timer off 42
 88.         qui timer list
 89.         local time_egen = r(t42)
 90. 
.         local rs = `time_egen'  / `time_gegen'
 91.         local tinfo `:di %4.3g `time_gegen'' vs `:di %4.3g `time_egen'', ratio `:di %4.3g `rs''
 92. 
.         cap noi assert (`g_fun' == c_`fun'2) | abs(`g_fun' - c_`fun'2) < `tol'
 93.         if ( _rc ) {
 94.             di as err "    compare_egen (failed): gegen `fun', missing not equal to egen (tol = `tol'; `tinfo')"
 95.             exit _rc
 96.         }
 97.         else di as txt "    compare_egen (passed): gegen `fun', missing results similar to egen (tol = `tol'; `tinfo')"
 98.     }
 99. 
.     {
100.         qui  `noisily' gegen g_g1 = group(`anything') `if' `in', counts(g_c1) fill(.) v `options' missing
101.         qui  `noisily' gegen g_g2 = group(`anything') `if' `in', counts(g_c2)         v `options' missing
102.         qui  `noisily' gegen g_c3 = count(1) `if' `in', by(`anything')
103.         qui  `noisily'  egen c_t1 = tag(`anything') `if' `in',  missing
104.         cap noi assert ( (g_c1 == g_c3) | ((c_t1 == 0) & (g_c1 == .)) ) & (g_c2 == g_c3)
105.         if ( _rc ) {
106.             di as err "    compare_egen (failed): gegen `fun' counts not equal to gegen count (tol = `tol')"
107.             exit _rc
108.         }
109.         else di as txt "    compare_egen (passed): gegen `fun' counts results similar to gegen count (tol = `tol')"
110.     }
111. 
.     cap drop g_*
112.     cap drop c_*
113. end

. 
. ***********************************************************************
. *                             Benchmarks                              *
. ***********************************************************************
. 
. capture program drop bench_egen

. program bench_egen
  1.     syntax, [tol(real 1e-6) bench(int 1) n(int 1000) NOIsily *]
  2. 
.     qui gen_data, n(`n') random(1)
  3.     qui expand `=100 * `bench''
  4.     qui sort random1
  5. 
.     local N = trim("`: di %15.0gc _N'")
  6.     local J = trim("`: di %15.0gc `n''")
  7. 
.     di _n(1)
  8.     di "Benchmark vs egen, obs = `N', J = `J' (in seconds)"
  9.     di "     egen | fegen | gegen | ratio (e/g) | ratio (f/g) | varlist"
 10.     di "     ---- | ----- | ----- | ----------- | ----------- | -------"
 11. 
.     versus_egen str_12,              `options' fegen
 12.     versus_egen str_12 str_32,       `options' fegen
 13.     versus_egen str_12 str_32 str_4, `options' fegen
 14. 
.     versus_egen double1,                 `options' fegen
 15.     versus_egen double1 double2,         `options' fegen
 16.     versus_egen double1 double2 double3, `options' fegen
 17. 
.     versus_egen int1,           `options' fegen
 18.     versus_egen int1 int2,      `options' fegen
 19.     versus_egen int1 int2 int3, `options' fegen
 20. 
.     versus_egen int1 str_32 double1,                                        `options'
 21.     versus_egen int1 str_32 double1 int2 str_12 double2,                    `options'
 22.     versus_egen int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options'
 23. 
.     di _n(1) "{hline 80}" _n(1) "bench_egen, `options'" _n(1) "{hline 80}" _n(1)
 24. end

. 
. capture program drop versus_egen

. program versus_egen, rclass
  1.     syntax varlist, [fegen *]
  2. 
.     preserve
  3.         timer clear
  4.         timer on 42
  5.         cap egen id = group(`varlist')
  6.         timer off 42
  7.         qui timer list
  8.         local time_egen = r(t42)
  9.     restore
 10. 
.     preserve
 11.         timer clear
 12.         timer on 43
 13.         cap gegen id = group(`varlist'), `options'
 14.         timer off 43
 15.         qui timer list
 16.         local time_gegen = r(t43)
 17.     restore
 18. 
.     if ( "`fegen'" == "fegen" ) {
 19.     preserve
 20.         timer clear
 21.         timer on 44
 22.         cap fegen id = group(`varlist')
 23.         timer off 44
 24.         qui timer list
 25.         local time_fegen = r(t44)
 26.     restore
 27.     }
 28.     else {
 29.         local time_fegen = .
 30.     }
 31. 
.     local rs = `time_egen'  / `time_gegen'
 32.     local rf = `time_fegen' / `time_gegen'
 33.     di "    `:di %5.3g `time_egen'' | `:di %5.3g `time_fegen'' | `:di %5.3g `time_gegen'' | `:di %11.3g `rs'' | `:di %11.3g `rf'' | `varlist'"
 34. end

. capture program drop checks_unique

. program checks_unique
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2.     di _n(1) "{hline 80}" _n(1) "checks_unique, `options'" _n(1) "{hline 80}" _n(1)
  3. 
.     qui `noisily' gen_data, n(5000)
  4.     qui expand 2
  5.     gen long ix = _n
  6. 
.     checks_inner_unique str_12,              `options'
  7.     checks_inner_unique str_12 str_32,       `options'
  8.     checks_inner_unique str_12 str_32 str_4, `options'
  9. 
.     checks_inner_unique double1,                 `options'
 10.     checks_inner_unique double1 double2,         `options'
 11.     checks_inner_unique double1 double2 double3, `options'
 12. 
.     checks_inner_unique int1,           `options'
 13.     checks_inner_unique int1 int2,      `options'
 14.     checks_inner_unique int1 int2 int3, `options'
 15. 
.     checks_inner_unique int1 str_32 double1,                                        `options'
 16.     checks_inner_unique int1 str_32 double1 int2 str_12 double2,                    `options'
 17.     checks_inner_unique int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options'
 18. 
.     clear
 19.     gen x = 1
 20.     cap gunique x
 21.     assert _rc == 2000
 22. 
.     clear
 23.     set obs 10
 24.     gen x = 1
 25.     cap gunique x if x < 0
 26.     assert _rc == 0
 27. end

. 
. capture program drop checks_inner_unique

. program checks_inner_unique
  1.     syntax varlist, [*]
  2.     cap gunique `varlist', `options' v b miss
  3.     assert _rc == 0
  4. 
.     cap gunique `varlist' in 1, `options' miss d
  5.     assert _rc == 0
  6.     assert `r(N)' == `r(J)'
  7.     assert `r(J)' == 1
  8. 
.     cap gunique `varlist' if _n == 1, `options' miss
  9.     assert _rc == 0
 10.     assert `r(N)' == `r(J)'
 11.     assert `r(J)' == 1
 12. 
.     cap gunique `varlist' if _n < 10 in 5, `options' miss d
 13.     assert _rc == 0
 14.     assert `r(N)' == `r(J)'
 15.     assert `r(J)' == 1
 16. end

. 
. ***********************************************************************
. *                               Compare                               *
. ***********************************************************************
. 
. capture program drop compare_unique

. program compare_unique
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2. 
.     qui `noisily' gen_data, n(1000)
  3.     qui expand 100
  4. 
.     local N    = trim("`: di %15.0gc _N'")
  5.     local hlen = 22 + length("`options'") + length("`N'")
  6.     di _n(1) "{hline 80}" _n(1) "compare_unique, N = `N', `options'" _n(1) "{hline 80}" _n(1)
  7. 
.     compare_inner_unique str_12,              `options'
  8.     compare_inner_unique str_12 str_32,       `options'
  9.     compare_inner_unique str_12 str_32 str_4, `options'
 10. 
.     compare_inner_unique double1,                 `options'
 11.     compare_inner_unique double1 double2,         `options'
 12.     compare_inner_unique double1 double2 double3, `options'
 13. 
.     compare_inner_unique int1,           `options'
 14.     compare_inner_unique int1 int2,      `options'
 15.     compare_inner_unique int1 int2 int3, `options'
 16. 
.     compare_inner_unique int1 str_32 double1,                                        `options'
 17.     compare_inner_unique int1 str_32 double1 int2 str_12 double2,                    `options'
 18.     compare_inner_unique int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options'
 19. end

. 
. capture program drop compare_inner_unique

. program compare_inner_unique
  1.     syntax varlist, [*]
  2.     tempvar rsort ix
  3.     gen `rsort' = runiform()
  4.     gen long `ix' = _n
  5. 
.     cap unique `varlist',
  6.     local nJ_unique = `r(unique)'
  7.     cap gunique `varlist', `options'
  8.     local nJ_gunique = `r(unique)'
  9.     check_nlevels `nJ_unique' `nJ_gunique' , by( `varlist')
 10. 
.     cap unique `ix' `varlist',
 11.     local nJ_unique = `r(unique)'
 12.     cap gunique `ix' `varlist', `options'
 13.     local nJ_gunique = `r(unique)'
 14.     check_nlevels `nJ_unique' `nJ_gunique' , by( ix `varlist')
 15. 
.     cap unique `rsort' `varlist',
 16.     local nJ_unique = `r(unique)'
 17.     cap gunique `rsort' `varlist', `options'
 18.     local nJ_gunique = `r(unique)'
 19.     check_nlevels `nJ_unique' `nJ_gunique' , by( rsort `varlist')
 20. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.     qui replace `ix' = `=_N / 2' if _n > `=_N / 2'
 21.     cap unique `ix'
 22.     local nJ_unique = `r(unique)'
 23.     cap gunique `ix', `options'
 24.     local nJ_gunique = `r(unique)'
 25.     check_nlevels `nJ_unique' `nJ_gunique' , by( ix)
 26. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.     preserve
 27.         qui keep in 100 / `=ceil(`=_N / 2')'
 28.         cap unique `ix' `varlist',
 29.         local nJ_unique = `r(unique)'
 30.     restore
 31.     cap gunique `ix' `varlist' in 100 / `=ceil(`=_N / 2')', `options'
 32.     local nJ_gunique = `r(unique)'
 33.     check_nlevels  `nJ_unique' `nJ_gunique' , by( ix `varlist' in 100 / `=ceil(`=_N / 2')')
 34. 
.     preserve
 35.         qui keep in `=ceil(`=_N / 2')' / `=_N'
 36.         cap unique `ix' `varlist',
 37.         local nJ_unique = `r(unique)'
 38.     restore
 39.     cap gunique `ix' `varlist' in `=ceil(`=_N / 2')' / `=_N', `options'
 40.     local nJ_gunique = `r(unique)'
 41.     check_nlevels  `nJ_unique' `nJ_gunique' , by( ix `varlist' in `=ceil(`=_N / 2')' / `=_N')
 42. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.     preserve
 43.         qui keep if _n < `=_N / 2'
 44.         cap unique `ix' `varlist',
 45.         local nJ_unique = `r(unique)'
 46.     restore
 47.     cap gunique `ix' `varlist' if _n < `=_N / 2',
 48.     local nJ_gunique = `r(unique)'
 49.     check_nlevels  `nJ_unique' `nJ_gunique' , by( ix `varlist' if _n < `=_N / 2')
 50. 
.     preserve
 51.         qui keep if _n > `=_N / 2'
 52.         cap unique `ix' `varlist',
 53.         local nJ_unique = `r(unique)'
 54.     restore
 55.     cap gunique `ix' `varlist' if _n > `=_N / 2', `options'
 56.     local nJ_gunique = `r(unique)'
 57.     check_nlevels  `nJ_unique' `nJ_gunique' , by( ix `varlist' if _n > `=_N / 2')
 58. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.     qui replace `ix' = 100 in 1 / 100
 59. 
.     preserve
 60.         qui keep if _n < `=_N / 4' in 100 / `=ceil(`=_N / 2')'
 61.         cap unique `ix' `varlist',
 62.         local nJ_unique = `r(unique)'
 63.     restore
 64.     cap gunique `ix' `varlist' if _n < `=_N / 4' in 100 / `=ceil(`=_N / 2')', `options'
 65.     local nJ_gunique = `r(unique)'
 66.     check_nlevels  `nJ_unique' `nJ_gunique' , by( ix `varlist' if _n < `=_N / 4' in 100 / `=ceil(`=_N / 2')')
 67. 
.     preserve
 68.         qui keep if _n > `=_N / 4' in `=ceil(`=_N / 1.5')' / `=_N'
 69.         cap unique `ix' `varlist',
 70.         local nJ_unique = `r(unique)'
 71.     restore
 72.     cap gunique `ix' `varlist' if _n > `=_N / 4' in `=ceil(`=_N / 1.5')' / `=_N',
 73.     local nJ_gunique = `r(unique)'
 74.     check_nlevels  `nJ_unique' `nJ_gunique' , by( ix `varlist' if _n > `=_N / 4' in `=ceil(`=_N / 1.5')' / `=_N')
 75. 
.     di _n(1)
 76. end

. 
. capture program drop check_nlevels

. program check_nlevels
  1.     syntax anything, by(str)
  2. 
.     tokenize `anything'
  3.     local nJ_unique  `1'
  4.     local nJ_gunique `2'
  5. 
.     if ( `nJ_unique' != `nJ_gunique' ) {
  6.         di as err "    compare_unique (failed): unique `by' gave `nJ' levels but gunique gave `nJ_gunique'"
  7.         exit 198
  8.     }
  9.     else {
 10.         di as txt "    compare_unique (passed): unique and gunique `by' gave the same number of levels"
 11.     }
 12. end

. 
. ***********************************************************************
. *                             Benchmarks                              *
. ***********************************************************************
. 
. capture program drop bench_unique

. program bench_unique
  1.     syntax, [tol(real 1e-6) bench(int 1) n(int 1000) NOIsily *]
  2. 
.     qui `noisily' gen_data, n(`n')
  3.     qui expand `=100 * `bench''
  4.     qui gen rsort = rnormal()
  5.     qui sort rsort
  6. 
.     local N = trim("`: di %15.0gc _N'")
  7.     local J = trim("`: di %15.0gc `n''")
  8. 
.     di as txt _n(1)
  9.     di as txt "Benchmark vs unique, obs = `N', all calls include an index to ensure uniqueness (in seconds)"
 10.     di as txt "     unique | funique | gunique | ratio (u/g) | ratio (f/g) | varlist"
 11.     di as txt "     ------ | ------- | ------- | ----------- | ----------- | -------"
 12. 
.     versus_unique str_12,              `options' funique unique
 13.     versus_unique str_12 str_32,       `options' funique unique
 14.     versus_unique str_12 str_32 str_4, `options' funique unique
 15. 
.     versus_unique double1,                 `options' funique unique
 16.     versus_unique double1 double2,         `options' funique unique
 17.     versus_unique double1 double2 double3, `options' funique unique
 18. 
.     versus_unique int1,           `options' funique unique
 19.     versus_unique int1 int2,      `options' funique unique
 20.     versus_unique int1 int2 int3, `options' funique unique
 21. 
.     versus_unique int1 str_32 double1,                                        unique `options'
 22.     versus_unique int1 str_32 double1 int2 str_12 double2,                    unique `options'
 23.     versus_unique int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, unique `options'
 24. 
.     di as txt _n(1)
 25.     di as txt "Benchmark vs unique, obs = `N', J = `J' (in seconds)"
 26.     di as txt "     unique | funique | gunique | ratio (i/g) | ratio (f/g) | varlist"
 27.     di as txt "     ------ | ------- | ------- | ----------- | ----------- | -------"
 28. 
.     versus_unique str_12,              `options' funique
 29.     versus_unique str_12 str_32,       `options' funique
 30.     versus_unique str_12 str_32 str_4, `options' funique
 31. 
.     versus_unique double1,                 `options' funique
 32.     versus_unique double1 double2,         `options' funique
 33.     versus_unique double1 double2 double3, `options' funique
 34. 
.     versus_unique int1,           `options' funique
 35.     versus_unique int1 int2,      `options' funique
 36.     versus_unique int1 int2 int3, `options' funique
 37. 
.     versus_unique int1 str_32 double1,                                        `options'
 38.     versus_unique int1 str_32 double1 int2 str_12 double2,                    `options'
 39.     versus_unique int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options'
 40. 
.     di as txt _n(1) "{hline 80}" _n(1) "bench_unique, `options'" _n(1) "{hline 80}" _n(1)
 41. end

. 
. capture program drop versus_unique

. program versus_unique, rclass
  1.     syntax varlist, [funique unique *]
  2.     if ( "`unique'" == "unique" ) {
  3.         tempvar ix
  4.         gen `ix' = `=_N' - _n
  5.         if ( strpos("`varlist'", "str") ) qui tostring `ix', replace
  6.     }
  7. 
.     preserve
  8.         timer clear
  9.         timer on 42
 10.         cap unique `varlist' `ix'
 11.         assert inlist(_rc, 0, 459)
 12.         timer off 42
 13.         qui timer list
 14.         local time_unique = r(t42)
 15.     restore
 16. 
.     preserve
 17.         timer clear
 18.         timer on 43
 19.         cap gunique `varlist' `ix', `options'
 20.         assert inlist(_rc, 0, 459)
 21.         timer off 43
 22.         qui timer list
 23.         local time_gunique = r(t43)
 24.     restore
 25. 
.     if ( "`funique'" == "funique" ) {
 26.     preserve
 27.         timer clear
 28.         timer on 44
 29.         cap funique `varlist' `ix'
 30.         assert inlist(_rc, 0, 459)
 31.         timer off 44
 32.         qui timer list
 33.         local time_funique = r(t44)
 34.     restore
 35.     }
 36.     else {
 37.         local time_funique = .
 38.     }
 39. 
.     local rs = `time_unique'  / `time_gunique'
 40.     local rf = `time_funique' / `time_gunique'
 41.     di as txt "    `:di %7.3g `time_unique'' | `:di %7.3g `time_funique'' | `:di %7.3g `time_gunique'' | `:di %11.3g `rs'' | `:di %11.3g `rf'' | `varlist'"
 42. end

. 
. * Prototype of -unique-
. * ---------------------
. 
. cap mata: mata drop funique()

. cap pr drop funique

. program funique
  1.         syntax varlist [if] [in], [Detail]
  2.         
.         mata: funique("`varlist'", "`detail'"!="")
  3. end

. 
. mata:
------------------------------------------------- mata (type end to exit) -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
: mata set matastrict off

: void funique(string scalar varlist, real scalar detail)
> {
>         class Factor scalar F
>         F = factor(varlist)
>         printf("{txt}Number of unique values of turn is {res}%-11.0f{txt}\n", F.num_levels)
>         printf("{txt}Number of records is {res}%-11.0f{txt}\n", F.num_obs)
>         if (detail) {
>                 (void) st_addvar("long", tempvar=st_tempname())
>                 st_store(1::F.num_levels, tempvar, F.counts)
>                 st_varlabel(tempvar, "Records per " + invtokens(F.varlist))
>                 stata("su " + tempvar + ", detail")
>         }
> }

: end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

. capture program drop checks_levelsof

. program checks_levelsof
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2.     di _n(1) "{hline 80}" _n(1) "checks_levelsof, `options'" _n(1) "{hline 80}" _n(1)
  3. 
.     qui `noisily' gen_data, n(50)
  4.     qui expand 200
  5.     gen long ix = _n
  6. 
.     checks_inner_levelsof str_12,              `options'
  7.     checks_inner_levelsof str_12 str_32,       `options'
  8.     checks_inner_levelsof str_12 str_32 str_4, `options'
  9. 
.     checks_inner_levelsof double1,                 `options'
 10.     checks_inner_levelsof double1 double2,         `options'
 11.     checks_inner_levelsof double1 double2 double3, `options'
 12. 
.     checks_inner_levelsof int1,           `options'
 13.     checks_inner_levelsof int1 int2,      `options'
 14.     checks_inner_levelsof int1 int2 int3, `options'
 15. 
.     checks_inner_levelsof int1 str_32 double1,                                        `options'
 16.     checks_inner_levelsof int1 str_32 double1 int2 str_12 double2,                    `options'
 17.     checks_inner_levelsof int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options'
 18. 
.     clear
 19.     gen x = 1
 20.     cap glevelsof x
 21.     assert _rc == 2000
 22. 
.     clear
 23.     set obs 100000
 24.     gen x = _n
 25.     cap glevelsof x in 1 / 10000 if mod(x, 3) == 0
 26.     assert _rc == 0
 27. end

. 
. capture program drop checks_inner_levelsof

. program checks_inner_levelsof
  1.     syntax varlist, [*]
  2.     cap noi glevelsof `varlist', `options' v b clean silent
  3.     assert _rc == 0
  4. 
.     cap glevelsof `varlist' in 1, `options' silent miss
  5.     assert _rc == 0
  6. 
.     cap glevelsof `varlist' in 1, `options' miss
  7.     assert _rc == 0
  8. 
.     cap glevelsof `varlist' if _n == 1, `options' local(hi) miss
  9.     assert _rc == 0
 10.     assert `"`r(levels)'"' == `"`hi'"'
 11. 
.     cap glevelsof `varlist' if _n < 10 in 5, `options' s(" | ") cols(", ") miss
 12.     assert _rc == 0
 13. end

. 
. ***********************************************************************
. *                               Compare                               *
. ***********************************************************************
. 
. capture program drop compare_levelsof

. program compare_levelsof
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2. 
.     qui `noisily' gen_data, n(50)
  3.     qui expand 10000
  4. 
.     local N    = trim("`: di %15.0gc _N'")
  5.     local hlen = 24 + length("`options'") + length("`N'")
  6.     di _n(1) "{hline 80}" _n(1) "compare_levelsof, N = `N', `options'" _n(1) "{hline 80}" _n(1)
  7. 
.     compare_inner_levelsof str_12, `options'
  8.     compare_inner_levelsof str_32, `options'
  9.     compare_inner_levelsof str_4,  `options'
 10. 
.     compare_inner_levelsof double1, `options' round
 11.     compare_inner_levelsof double2, `options' round
 12.     compare_inner_levelsof double3, `options' round
 13. 
.     compare_inner_levelsof int1, `options'
 14.     compare_inner_levelsof int2, `options'
 15.     compare_inner_levelsof int3, `options'
 16. end

. 
. capture program drop compare_inner_levelsof

. program compare_inner_levelsof
  1.     syntax varlist, [round *]
  2. 
.     cap  levelsof `varlist', s(" | ") local(l_stata)
  3.     cap glevelsof `varlist', s(" | ") local(l_gtools) `options'
  4.     if ( `"`l_stata'"' != `"`l_gtools'"' ) {
  5.         if ( "`round'" != "" ) {
  6.             while ( `"`l_stata'`l_gtools'"' != "" ) {
  7.                 gettoken l_scmp l_stata:  l_stata,  p(" | ")
  8.                 gettoken _      l_stata:  l_stata,  p(" | ")
  9.                 gettoken l_gcmp l_gtools: l_gtools, p(" | ")
 10.                 gettoken _      l_gtools: l_gtools, p(" | ")
 11.                 if ( `"`l_gcmp'"' != `"`l_scmp'"' ) {
 12.                     cap assert abs(`l_gcmp' - `l_scmp') < 1e-15
 13.                     if ( _rc ) {
 14.                         di as err "    compare_levelsof (failed): glevelsof `varlist' returned different levels with rounding"
 15.                         exit 198
 16.                     }
 17.                 }
 18.             }
 19.             di as txt "    compare_levelsof (passed): glevelsof `varlist' returned similar levels as levelsof (tol = 1e-15)"
 20.         }
 21.         else {
 22.             di as err "    compare_levelsof (failed): glevelsof `varlist' returned different levels to levelsof"
 23.             exit 198
 24.         }
 25.     }
 26.     else {
 27.         di as txt "    compare_levelsof (passed): glevelsof `varlist' returned the same levels as levelsof"
 28.     }
 29. 
.     cap  levelsof `varlist', local(l_stata)  miss
 30.     cap glevelsof `varlist', local(l_gtools) miss `options'
 31.     if ( `"`l_stata'"' != `"`l_gtools'"' ) {
 32.         if ( "`round'" != "" ) {
 33.             while ( `"`l_stata'`l_gtools'"' != "" ) {
 34.                 gettoken l_scmp l_stata:  l_stata,  p(" | ")
 35.                 gettoken _      l_stata:  l_stata,  p(" | ")
 36.                 gettoken l_gcmp l_gtools: l_gtools, p(" | ")
 37.                 gettoken _      l_gtools: l_gtools, p(" | ")
 38.                 if ( `"`l_gcmp'"' != `"`l_scmp'"' ) {
 39.                     cap assert abs(`l_gcmp' - `l_scmp') < 1e-15
 40.                     if ( _rc ) {
 41.                         di as err "    compare_levelsof (failed): glevelsof `varlist' returned different levels with rounding"
 42.                         exit 198
 43.                     }
 44.                 }
 45.             }
 46.             di as txt "    compare_levelsof (passed): glevelsof `varlist' returned similar levels as levelsof (tol = 1e-15)"
 47.         }
 48.         else {
 49.             di as err "    compare_levelsof (failed): glevelsof `varlist' returned different levels to levelsof"
 50.             exit 198
 51.         }
 52.     }
 53.     else {
 54.         di as txt "    compare_levelsof (passed): glevelsof `varlist' returned the same levels as levelsof"
 55.     }
 56. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.         cap  levelsof `varlist' in 100 / `=ceil(`=_N / 2')', local(l_stata)  miss
 57.         cap glevelsof `varlist' in 100 / `=ceil(`=_N / 2')', local(l_gtools) miss `options'
 58.         if ( `"`l_stata'"' != `"`l_gtools'"' ) {
 59.             if ( "`round'" != "" ) {
 60.                 while ( `"`l_stata'`l_gtools'"' != "" ) {
 61.                     gettoken l_scmp l_stata:  l_stata,  p(" | ")
 62.                     gettoken _      l_stata:  l_stata,  p(" | ")
 63.                     gettoken l_gcmp l_gtools: l_gtools, p(" | ")
 64.                     gettoken _      l_gtools: l_gtools, p(" | ")
 65.                     if ( `"`l_gcmp'"' != `"`l_scmp'"' ) {
 66.                         cap assert abs(`l_gcmp' - `l_scmp') < 1e-15
 67.                         if ( _rc ) {
 68.                             di as err "    compare_levelsof (failed): glevelsof `varlist' [in] returned different levels with rounding"
 69.                             exit 198
 70.                         }
 71.                     }
 72.                 }
 73.                 di as txt "    compare_levelsof (passed): glevelsof `varlist' [in] returned similar levels as levelsof (tol = 1e-15)"
 74.             }
 75.             else {
 76.                 di as err "    compare_levelsof (failed): glevelsof `varlist' [in] returned different levels to levelsof"
 77.                 exit 198
 78.             }
 79.         }
 80.         else {
 81.             di as txt "    compare_levelsof (passed): glevelsof `varlist' [in] returned the same levels as levelsof"
 82.         }
 83. 
.         cap glevelsof `varlist' in `=ceil(`=_N / 2')' / `=_N', local(l_stata)
 84.         cap glevelsof `varlist' in `=ceil(`=_N / 2')' / `=_N', local(l_gtools) `options'
 85.         if ( `"`l_stata'"' != `"`l_gtools'"' ) {
 86.             if ( "`round'" != "" ) {
 87.                 while ( `"`l_stata'`l_gtools'"' != "" ) {
 88.                     gettoken l_scmp l_stata:  l_stata,  p(" | ")
 89.                     gettoken _      l_stata:  l_stata,  p(" | ")
 90.                     gettoken l_gcmp l_gtools: l_gtools, p(" | ")
 91.                     gettoken _      l_gtools: l_gtools, p(" | ")
 92.                     if ( `"`l_gcmp'"' != `"`l_scmp'"' ) {
 93.                         cap assert abs(`l_gcmp' - `l_scmp') < 1e-15
 94.                         if ( _rc ) {
 95.                             di as err "    compare_levelsof (failed): glevelsof `varlist' [in] returned different levels with rounding"
 96.                             exit 198
 97.                         }
 98.                     }
 99.                 }
100.                 di as txt "    compare_levelsof (passed): glevelsof `varlist' [in] returned similar levels as levelsof (tol = 1e-15)"
101.             }
102.             else {
103.                 di as err "    compare_levelsof (failed): glevelsof `varlist' [in] returned different levels to levelsof"
104.                 exit 198
105.             }
106.         }
107.         else {
108.             di as txt "    compare_levelsof (passed): glevelsof `varlist' [in] returned the same levels as levelsof"
109.         }
110. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.         cap  levelsof `varlist' if _n > `=_N / 2', local(l_stata)  miss
111.         cap glevelsof `varlist' if _n > `=_N / 2', local(l_gtools) miss `options'
112.         if ( `"`l_stata'"' != `"`l_gtools'"' ) {
113.             if ( "`round'" != "" ) {
114.                 while ( `"`l_stata'`l_gtools'"' != "" ) {
115.                     gettoken l_scmp l_stata:  l_stata,  p(" | ")
116.                     gettoken _      l_stata:  l_stata,  p(" | ")
117.                     gettoken l_gcmp l_gtools: l_gtools, p(" | ")
118.                     gettoken _      l_gtools: l_gtools, p(" | ")
119.                     if ( `"`l_gcmp'"' != `"`l_scmp'"' ) {
120.                         cap assert abs(`l_gcmp' - `l_scmp') < 1e-15
121.                         if ( _rc ) {
122.                             di as err "    compare_levelsof (failed): glevelsof `varlist' [if] returned different levels with rounding"
123.                             exit 198
124.                         }
125.                     }
126.                 }
127.                 di as txt "    compare_levelsof (passed): glevelsof `varlist' [if] returned similar levels as levelsof (tol = 1e-15)"
128.             }
129.             else {
130.                 di as err "    compare_levelsof (failed): glevelsof `varlist' [if] returned different levels to levelsof"
131.                 exit 198
132.             }
133.         }
134.         else {
135.             di as txt "    compare_levelsof (passed): glevelsof `varlist' [if] returned the same levels as levelsof"
136.         }
137. 
.         cap glevelsof `varlist' if _n < `=_N / 2', local(l_stata)
138.         cap glevelsof `varlist' if _n < `=_N / 2', local(l_gtools) `options'
139.         if ( `"`l_stata'"' != `"`l_gtools'"' ) {
140.             if ( "`round'" != "" ) {
141.                 while ( `"`l_stata'`l_gtools'"' != "" ) {
142.                     gettoken l_scmp l_stata:  l_stata,  p(" | ")
143.                     gettoken _      l_stata:  l_stata,  p(" | ")
144.                     gettoken l_gcmp l_gtools: l_gtools, p(" | ")
145.                     gettoken _      l_gtools: l_gtools, p(" | ")
146.                     if ( `"`l_gcmp'"' != `"`l_scmp'"' ) {
147.                         cap assert abs(`l_gcmp' - `l_scmp') < 1e-15
148.                         if ( _rc ) {
149.                             di as err "    compare_levelsof (failed): glevelsof `varlist' [if] returned different levels with rounding"
150.                             exit 198
151.                         }
152.                     }
153.                 }
154.                 di as txt "    compare_levelsof (passed): glevelsof `varlist' [if] returned similar levels as levelsof (tol = 1e-15)"
155.             }
156.             else {
157.                 di as err "    compare_levelsof (failed): glevelsof `varlist' [if] returned different levels to levelsof"
158.                 exit 198
159.             }
160.         }
161.         else {
162.             di as txt "    compare_levelsof (passed): glevelsof `varlist' [if] returned the same levels as levelsof"
163.         }
164. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.         cap  levelsof `varlist' if _n < `=_N / 4' in 100 / `=ceil(`=_N / 2')', local(l_stata)  miss
165.         cap glevelsof `varlist' if _n < `=_N / 4' in 100 / `=ceil(`=_N / 2')', local(l_gtools) miss `options'
166.         if ( `"`l_stata'"' != `"`l_gtools'"' ) {
167.             if ( "`round'" != "" ) {
168.                 while ( `"`l_stata'`l_gtools'"' != "" ) {
169.                     gettoken l_scmp l_stata:  l_stata,  p(" | ")
170.                     gettoken _      l_stata:  l_stata,  p(" | ")
171.                     gettoken l_gcmp l_gtools: l_gtools, p(" | ")
172.                     gettoken _      l_gtools: l_gtools, p(" | ")
173.                     if ( `"`l_gcmp'"' != `"`l_scmp'"' ) {
174.                         cap assert abs(`l_gcmp' - `l_scmp') < 1e-15
175.                         if ( _rc ) {
176.                             di as err "    compare_levelsof (failed): glevelsof `varlist' [if] [in] returned different levels with rounding"
177.                             exit 198
178.                         }
179.                     }
180.                 }
181.                 di as txt "    compare_levelsof (passed): glevelsof `varlist'  if] [in] returned similar levels as levelsof (tol = 1e-15)"
182.             }
183.             else {
184.                 di as err "    compare_levelsof (failed): glevelsof `varlist' [if] [in] returned different levels to levelsof"
185.                 exit 198
186.             }
187.         }
188.         else {
189.             di as txt "    compare_levelsof (passed): glevelsof `varlist' [if] [in] returned the same levels as levelsof"
190.         }
191. 
.         cap glevelsof `varlist' if _n > `=_N / 4' in `=ceil(`=_N / 1.5')' / `=_N', local(l_stata)
192.         cap glevelsof `varlist' if _n > `=_N / 4' in `=ceil(`=_N / 1.5')' / `=_N', local(l_gtools) `options'
193.         if ( `"`l_stata'"' != `"`l_gtools'"' ) {
194.             if ( "`round'" != "" ) {
195.                 while ( `"`l_stata'`l_gtools'"' != "" ) {
196.                     gettoken l_scmp l_stata:  l_stata,  p(" | ")
197.                     gettoken _      l_stata:  l_stata,  p(" | ")
198.                     gettoken l_gcmp l_gtools: l_gtools, p(" | ")
199.                     gettoken _      l_gtools: l_gtools, p(" | ")
200.                     if ( `"`l_gcmp'"' != `"`l_scmp'"' ) {
201.                         cap assert abs(`l_gcmp' - `l_scmp') < 1e-15
202.                         if ( _rc ) {
203.                             di as err "    compare_levelsof (failed): glevelsof `varlist' [if] [in] returned different levels with rounding"
204.                             exit 198
205.                         }
206.                     }
207.                 }
208.                 di as txt "    compare_levelsof (passed): glevelsof `varlist'  if] [in] returned similar levels as levelsof (tol = 1e-15)"
209.             }
210.             else {
211.                 di as err "    compare_levelsof (failed): glevelsof `varlist' [if] [in] returned different levels to levelsof"
212.                 exit 198
213.             }
214.         }
215.         else {
216.             di as txt "    compare_levelsof (passed): glevelsof `varlist' [if] [in] returned the same levels as levelsof"
217.         }
218. 
.     di _n(1)
219. end

. 
. ***********************************************************************
. *                             Benchmarks                              *
. ***********************************************************************
. 
. capture program drop bench_levelsof

. program bench_levelsof
  1.     syntax, [tol(real 1e-6) bench(int 1) n(int 100) NOIsily *]
  2. 
.     qui `noisily' gen_data, n(`n')
  3.     qui expand `=1000 * `bench''
  4.     qui gen rsort = rnormal()
  5.     qui sort rsort
  6. 
.     local N = trim("`: di %15.0gc _N'")
  7.     local J = trim("`: di %15.0gc `n''")
  8. 
.     di as txt _n(1)
  9.     di as txt "Benchmark vs levelsof, obs = `N', J = `J' (in seconds)"
 10.     di as txt "    levelsof | flevelsof | glevelsof | ratio (l/g) | ratio (f/g) | varlist"
 11.     di as txt "    -------- | --------- | --------- | ----------- | ----------- | -------"
 12. 
.     versus_levelsof str_12, `options' flevelsof
 13.     versus_levelsof str_32, `options' flevelsof
 14.     versus_levelsof str_4,  `options' flevelsof
 15. 
.     versus_levelsof double1, `options' flevelsof
 16.     versus_levelsof double2, `options' flevelsof
 17.     versus_levelsof double3, `options' flevelsof
 18. 
.     versus_levelsof int1, `options' flevelsof
 19.     versus_levelsof int2, `options' flevelsof
 20.     versus_levelsof int3, `options' flevelsof
 21. 
.     di as txt _n(1) "{hline 80}" _n(1) "bench_levelsof, `options'" _n(1) "{hline 80}" _n(1)
 22. end

. 
. capture program drop versus_levelsof

. program versus_levelsof, rclass
  1.     syntax varlist, [flevelsof unique *]
  2.     if ( "`unique'" == "unique" ) {
  3.         tempvar ix
  4.         gen `ix' = `=_N' - _n
  5.         if ( strpos("`varlist'", "str") ) qui tostring `ix', replace
  6.     }
  7. 
.     preserve
  8.         timer clear
  9.         timer on 42
 10.         qui levelsof `varlist' `ix'
 11.         timer off 42
 12.         qui timer list
 13.         local time_levelsof = r(t42)
 14.     restore
 15. 
.     preserve
 16.         timer clear
 17.         timer on 43
 18.         qui glevelsof `varlist' `ix', `options'
 19.         timer off 43
 20.         qui timer list
 21.         local time_glevelsof = r(t43) 
 22.     restore
 23. 
.     if ( "`flevelsof'" == "flevelsof" ) {
 24.     preserve
 25.         timer clear
 26.         timer on 44
 27.         qui flevelsof `varlist' `ix'
 28.         timer off 44
 29.         qui timer list
 30.         local time_flevelsof = r(t44)
 31.     restore
 32.     }
 33.     else {
 34.         local time_flevelsof = .
 35.     }
 36. 
.     local rs = `time_levelsof'  / `time_glevelsof'
 37.     local rf = `time_flevelsof' / `time_glevelsof'
 38.     di as txt "    `:di %8.3g `time_levelsof'' | `:di %9.3g `time_flevelsof'' | `:di %9.3g `time_glevelsof'' | `:di %11.3g `rs'' | `:di %11.3g `rf'' | `varlist'"
 39. end

. capture program drop checks_isid

. program checks_isid
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2.     di _n(1) "{hline 80}" _n(1) "checks_isid, `options'" _n(1) "{hline 80}" _n(1)
  3. 
.     qui `noisily' gen_data, n(5000)
  4.     qui expand 2
  5.     gen long ix = _n
  6. 
.     checks_inner_isid str_12,              `options'
  7.     checks_inner_isid str_12 str_32,       `options'
  8.     checks_inner_isid str_12 str_32 str_4, `options'
  9. 
.     checks_inner_isid double1,                 `options'
 10.     checks_inner_isid double1 double2,         `options'
 11.     checks_inner_isid double1 double2 double3, `options'
 12. 
.     checks_inner_isid int1,           `options'
 13.     checks_inner_isid int1 int2,      `options'
 14.     checks_inner_isid int1 int2 int3, `options'
 15. 
.     checks_inner_isid int1 str_32 double1,                                        `options'
 16.     checks_inner_isid int1 str_32 double1 int2 str_12 double2,                    `options'
 17.     checks_inner_isid int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options'
 18. 
.     clear
 19.     gen x = 1
 20.     cap gisid x
 21.     assert _rc == 0
 22. end

. 
. capture program drop checks_inner_isid

. program checks_inner_isid
  1.     syntax varlist, [*]
  2.     cap gisid `varlist', `options' v b missok
  3.     assert _rc == 459
  4. 
.     cap gisid `varlist' in 1, `options' missok
  5.     assert _rc == 0
  6. 
.     cap gisid `varlist' if _n == 1, `options' missok
  7.     assert _rc == 0
  8. 
.     cap gisid `varlist' if _n < 10 in 5, `options' missok
  9.     assert _rc == 0
 10. end

. 
. ***********************************************************************
. *                               Compare                               *
. ***********************************************************************
. 
. capture program drop compare_isid

. program compare_isid
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2. 
.     qui `noisily' gen_data, n(1000)
  3.     qui expand 100
  4. 
.     local N    = trim("`: di %15.0gc _N'")
  5.     local hlen = 20 + length("`options'") + length("`N'")
  6.     di _n(1) "{hline 80}" _n(1) "compare_isid, N = `N', `options'" _n(1) "{hline 80}" _n(1)
  7. 
.     compare_inner_isid str_12,              `options'
  8.     compare_inner_isid str_12 str_32,       `options'
  9.     compare_inner_isid str_12 str_32 str_4, `options'
 10. 
.     compare_inner_isid double1,                 `options'
 11.     compare_inner_isid double1 double2,         `options'
 12.     compare_inner_isid double1 double2 double3, `options'
 13. 
.     compare_inner_isid int1,           `options'
 14.     compare_inner_isid int1 int2,      `options'
 15.     compare_inner_isid int1 int2 int3, `options'
 16. 
.     compare_inner_isid int1 str_32 double1,                                        `options'
 17.     compare_inner_isid int1 str_32 double1 int2 str_12 double2,                    `options'
 18.     compare_inner_isid int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options'
 19. end

. 
. capture program drop compare_inner_isid

. program compare_inner_isid
  1.     syntax varlist, [*]
  2.     tempvar rsort ix
  3.     gen `rsort' = runiform()
  4.     gen long `ix' = _n
  5. 
.     cap isid `varlist', missok
  6.     local rc_isid = _rc
  7.     cap gisid `varlist', missok `options'
  8.     local rc_gisid = _rc
  9.     check_rc `rc_isid' `rc_gisid' , by( `varlist')
 10. 
.     cap isid `ix' `varlist', missok
 11.     local rc_isid = _rc
 12.     cap gisid `ix' `varlist', missok `options'
 13.     local rc_gisid = _rc
 14.     check_rc `rc_isid' `rc_gisid' , by( ix `varlist')
 15. 
.     cap isid `rsort' `varlist', missok
 16.     local rc_isid = _rc
 17.     cap gisid `rsort' `varlist', missok `options'
 18.     local rc_gisid = _rc
 19.     check_rc `rc_isid' `rc_gisid' , by( rsort `varlist')
 20. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.     qui replace `ix' = `=_N / 2' if _n > `=_N / 2'
 21.     cap isid `ix'
 22.     local rc_isid = _rc
 23.     cap gisid `ix', `options'
 24.     local rc_gisid = _rc
 25.     check_rc `rc_isid' `rc_gisid' , by( ix)
 26. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.     preserve
 27.         qui keep in 100 / `=ceil(`=_N / 2')'
 28.         cap isid `ix' `varlist', missok
 29.         local rc_isid = _rc
 30.     restore
 31.     cap gisid `ix' `varlist' in 100 / `=ceil(`=_N / 2')', missok `options'
 32.     local rc_gisid = _rc
 33.     check_rc  `rc_isid' `rc_gisid' , by( ix `varlist' in 100 / `=ceil(`=_N / 2')')
 34. 
.     preserve
 35.         qui keep in `=ceil(`=_N / 2')' / `=_N'
 36.         cap isid `ix' `varlist', missok
 37.         local rc_isid = _rc
 38.     restore
 39.     cap gisid `ix' `varlist' in `=ceil(`=_N / 2')' / `=_N', missok `options'
 40.     local rc_gisid = _rc
 41.     check_rc  `rc_isid' `rc_gisid' , by( ix `varlist' in `=ceil(`=_N / 2')' / `=_N')
 42. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.     preserve
 43.         qui keep if _n < `=_N / 2'
 44.         cap isid `ix' `varlist', missok
 45.         local rc_isid = _rc
 46.     restore
 47.     cap gisid `ix' `varlist' if _n < `=_N / 2', missok
 48.     local rc_gisid = _rc
 49.     check_rc  `rc_isid' `rc_gisid' , by( ix `varlist' if _n < `=_N / 2')
 50. 
.     preserve
 51.         qui keep if _n > `=_N / 2'
 52.         cap isid `ix' `varlist', missok
 53.         local rc_isid = _rc
 54.     restore
 55.     cap gisid `ix' `varlist' if _n > `=_N / 2', missok `options'
 56.     local rc_gisid = _rc
 57.     check_rc  `rc_isid' `rc_gisid' , by( ix `varlist' if _n > `=_N / 2')
 58. 
.     * ---------------------------------------------------------------------
.     * ---------------------------------------------------------------------
. 
.     qui replace `ix' = 100 in 1 / 100
 59. 
.     preserve
 60.         qui keep if _n < `=_N / 4' in 100 / `=ceil(`=_N / 2')'
 61.         cap isid `ix' `varlist', missok
 62.         local rc_isid = _rc
 63.     restore
 64.     cap gisid `ix' `varlist' if _n < `=_N / 4' in 100 / `=ceil(`=_N / 2')', missok `options'
 65.     local rc_gisid = _rc
 66.     check_rc  `rc_isid' `rc_gisid' , by( ix `varlist' if _n < `=_N / 4' in 100 / `=ceil(`=_N / 2')')
 67. 
.     preserve
 68.         qui keep if _n > `=_N / 4' in `=ceil(`=_N / 1.5')' / `=_N'
 69.         cap isid `ix' `varlist', missok
 70.         local rc_isid = _rc
 71.     restore
 72.     cap gisid `ix' `varlist' if _n > `=_N / 4' in `=ceil(`=_N / 1.5')' / `=_N', missok
 73.     local rc_gisid = _rc
 74.     check_rc  `rc_isid' `rc_gisid' , by( ix `varlist' if _n > `=_N / 4' in `=ceil(`=_N / 1.5')' / `=_N')
 75. 
.     di _n(1)
 76. end

. 
. capture program drop check_rc

. program check_rc
  1.     syntax anything, by(str)
  2. 
.     tokenize `anything'
  3.     local rc_isid  `1'
  4.     local rc_gisid `2'
  5. 
.     if ( `rc_isid' != `rc_gisid' ) {
  6.         if ( `rc_isid' & (`rc_gisid' == 0) ) {
  7.             di as err "    compare_isid (failed): isid `by' was an id but gisid returned error r(`rc_isid')"
  8.             exit `rc_gisid'
  9.         }
 10.         else if ( (`rc_isid' == 0) & `rc_gisid' ) {
 11.             di as err "    compare_isid (failed): gisid `by' was an id but isid returned error r(`rc_gisid')"
 12.             exit `rc_isid'
 13.         }
 14.         else {
 15.             di as err "    compare_isid (failed): `by' was not an id but isid and gisid returned different errors r(`rc_isid') vs r(`rc_gisid')"
 16.             exit `rc_gisid'
 17.         }
 18.     }
 19.     else {
 20.         if ( _rc ) {
 21.             di as txt "    compare_isid (passed): `by' was not an id"
 22.         }
 23.         else {
 24.             di as txt "    compare_isid (passed): `by' was an id"
 25.         }
 26.     }
 27. end

. 
. ***********************************************************************
. *                             Benchmarks                              *
. ***********************************************************************
. 
. capture program drop bench_isid

. program bench_isid
  1.     syntax, [tol(real 1e-6) bench(int 1) n(int 1000) NOIsily *]
  2. 
.     qui `noisily' gen_data, n(`n')
  3.     qui expand `=100 * `bench''
  4.     qui gen rsort = rnormal()
  5.     qui sort rsort
  6. 
.     local N = trim("`: di %15.0gc _N'")
  7.     local J = trim("`: di %15.0gc `n''")
  8. 
.     di as txt _n(1)
  9.     di as txt "Benchmark vs isid, obs = `N', all calls include an index to ensure uniqueness (in seconds)"
 10.     di as txt "     isid | fisid | gisid | ratio (i/g) | ratio (f/g) | varlist"
 11.     di as txt "     ---- | ----- | ----- | ----------- | ----------- | -------"
 12. 
.     versus_isid str_12,              `options' fisid unique
 13.     versus_isid str_12 str_32,       `options' fisid unique
 14.     versus_isid str_12 str_32 str_4, `options' fisid unique
 15. 
.     versus_isid double1,                 `options' fisid unique
 16.     versus_isid double1 double2,         `options' fisid unique
 17.     versus_isid double1 double2 double3, `options' fisid unique
 18. 
.     versus_isid int1,           `options' fisid unique
 19.     versus_isid int1 int2,      `options' fisid unique
 20.     versus_isid int1 int2 int3, `options' fisid unique
 21. 
.     versus_isid int1 str_32 double1,                                        unique `options'
 22.     versus_isid int1 str_32 double1 int2 str_12 double2,                    unique `options'
 23.     versus_isid int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, unique `options'
 24. 
.     di as txt _n(1)
 25.     di as txt "Benchmark vs isid, obs = `N', J = `J' (in seconds)"
 26.     di as txt "     isid | fisid | gisid | ratio (i/g) | ratio (f/g) | varlist"
 27.     di as txt "     ---- | ----- | ----- | ----------- | ----------- | -------"
 28. 
.     versus_isid str_12,              `options' fisid
 29.     versus_isid str_12 str_32,       `options' fisid
 30.     versus_isid str_12 str_32 str_4, `options' fisid
 31. 
.     versus_isid double1,                 `options' fisid
 32.     versus_isid double1 double2,         `options' fisid
 33.     versus_isid double1 double2 double3, `options' fisid
 34. 
.     versus_isid int1,           `options' fisid
 35.     versus_isid int1 int2,      `options' fisid
 36.     versus_isid int1 int2 int3, `options' fisid
 37. 
.     versus_isid int1 str_32 double1,                                        `options'
 38.     versus_isid int1 str_32 double1 int2 str_12 double2,                    `options'
 39.     versus_isid int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options'
 40. 
.     di as txt _n(1) "{hline 80}" _n(1) "bench_isid, `options'" _n(1) "{hline 80}" _n(1)
 41. end

. 
. capture program drop versus_isid

. program versus_isid, rclass
  1.     syntax varlist, [fisid unique *]
  2.     if ( "`unique'" == "unique" ) {
  3.         tempvar ix
  4.         gen `ix' = `=_N' - _n
  5.         if ( strpos("`varlist'", "str") ) qui tostring `ix', replace
  6.     }
  7. 
.     preserve
  8.         timer clear
  9.         timer on 42
 10.         cap isid `varlist' `ix', missok
 11.         assert inlist(_rc, 0, 459)
 12.         timer off 42
 13.         qui timer list
 14.         local time_isid = r(t42)
 15.     restore
 16. 
.     preserve
 17.         timer clear
 18.         timer on 43
 19.         cap gisid `varlist' `ix', `options' missok
 20.         assert inlist(_rc, 0, 459)
 21.         timer off 43
 22.         qui timer list
 23.         local time_gisid = r(t43)
 24.     restore
 25. 
.     if ( "`fisid'" == "fisid" ) {
 26.     preserve
 27.         timer clear
 28.         timer on 44
 29.         cap fisid `varlist' `ix', missok
 30.         assert inlist(_rc, 0, 459)
 31.         timer off 44
 32.         qui timer list
 33.         local time_fisid = r(t44)
 34.     restore
 35.     }
 36.     else {
 37.         local time_fisid = .
 38.     }
 39. 
.     local rs = `time_isid'  / `time_gisid'
 40.     local rf = `time_fisid' / `time_gisid'
 41.     di as txt "    `:di %5.3g `time_isid'' | `:di %5.3g `time_fisid'' | `:di %5.3g `time_gisid'' | `:di %11.3g `rs'' | `:di %11.3g `rf'' | `varlist'"
 42. end

. capture program drop checks_hashsort

. program checks_hashsort
  1.     syntax, [tol(real 1e-6) NOIsily *]
  2.     di _n(1) "{hline 80}" _n(1) "checks_hashsort, `options'" _n(1) "{hline 80}" _n(1)
  3. 
.     qui `noisily' gen_data, n(5000)
  4.     qui expand 2
  5.     gen long ix = _n
  6. 
.     checks_inner_hashsort -str_12,              `options'
  7.     checks_inner_hashsort str_12 -str_32,       `options'
  8.     checks_inner_hashsort str_12 -str_32 str_4, `options'
  9. 
.     checks_inner_hashsort -double1,                 `options'
 10.     checks_inner_hashsort double1 -double2,         `options'
 11.     checks_inner_hashsort double1 -double2 double3, `options'
 12. 
.     checks_inner_hashsort -int1,           `options'
 13.     checks_inner_hashsort int1 -int2,      `options'
 14.     checks_inner_hashsort int1 -int2 int3, `options'
 15. 
.     checks_inner_hashsort -int1 -str_32 -double1,                                         `options'
 16.     checks_inner_hashsort int1 -str_32 double1 -int2 str_12 -double2,                     `options'
 17.     checks_inner_hashsort int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3, `options'
 18. 
.     sysuse auto, clear
 19.     gen idx = _n
 20.     hashsort -foreign rep78 make -mpg, `options'
 21.     hashsort idx,                      `options'
 22.     hashsort -foreign rep78,           `options'
 23.     hashsort idx,                      `options'
 24.     hashsort foreign rep78 mpg,        `options'
 25.     hashsort idx,                      `options' v b
 26. end

. 
. capture program drop checks_inner_hashsort

. program checks_inner_hashsort
  1.     syntax anything, [*]
  2.     tempvar ix
  3.     hashsort `anything', `options' gen(`ix')
  4.     hashsort `: subinstr local anything "-" "", all', `options'
  5.     hashsort ix, `options'
  6. end

. 
. capture program drop bench_hashsort

. program bench_hashsort
  1.     compare_hashsort `0'
  2. end

. 
. capture program drop compare_hashsort

. program compare_hashsort
  1.     syntax, [tol(real 1e-6) NOIsily bench(int 1) n(int 1000) *]
  2. 
.     cap gen_data, n(`n')
  3.     qui expand 10 * `bench'
  4.     qui gen rsort = rnormal()
  5.     qui sort rsort
  6. 
.     local N = trim("`: di %15.0gc _N'")
  7.     local J = trim("`: di %15.0gc `n''")
  8. 
.     di _n(1)
  9.     di "Benchmark vs gsort, obs = `N', J = `J' (in seconds; datasets are compared via {opt cf})"
 10.     di "    gsort | hashsort | ratio (g/h) | varlist"
 11.     di "    ----- | -------- | ----------- | -------"
 12. 
.     compare_gsort -str_12,              `options'
 13.     compare_gsort str_12 -str_32,       `options'
 14.     compare_gsort str_12 -str_32 str_4, `options'
 15. 
.     compare_gsort -double1,                 `options'
 16.     compare_gsort double1 -double2,         `options'
 17.     compare_gsort double1 -double2 double3, `options'
 18. 
.     compare_gsort -int1,           `options'
 19.     compare_gsort int1 -int2,      `options'
 20.     compare_gsort int1 -int2 int3, `options'
 21. 
.     compare_gsort -int1 -str_32 -double1,                                         `options'
 22.     compare_gsort int1 -str_32 double1 -int2 str_12 -double2,                     `options'
 23.     compare_gsort int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3, `options'
 24. 
.     qui expand 10
 25.     local N = trim("`: di %15.0gc _N'")
 26. 
.     di _n(1)
 27.     di "Benchmark vs sort, obs = `N', J = `J' (in seconds; datasets are compared via {opt cf})"
 28.     di "     sort | fsort | hashsort | ratio (s/h) | ratio (f/h) | varlist"
 29.     di "     ---- | ----- | -------- | ----------- | ----------- | -------"
 30. 
.     compare_sort str_12,              `options' fsort
 31.     compare_sort str_12 str_32,       `options' fsort
 32.     compare_sort str_12 str_32 str_4, `options' fsort
 33. 
.     compare_sort double1,                 `options' fsort
 34.     compare_sort double1 double2,         `options' fsort
 35.     compare_sort double1 double2 double3, `options' fsort
 36. 
.     compare_sort int1,           `options' fsort
 37.     compare_sort int1 int2,      `options' fsort
 38.     compare_sort int1 int2 int3, `options' fsort
 39. 
.     compare_sort int1 str_32 double1,                                        `options'
 40.     compare_sort int1 str_32 double1 int2 str_12 double2,                    `options'
 41.     compare_sort int1 str_32 double1 int2 str_12 double2 int3 str_4 double3, `options'
 42. 
.     di _n(1) "{hline 80}" _n(1) "compare_hashsort, `options'" _n(1) "{hline 80}" _n(1)
 43. end

. 
. capture program drop compare_sort

. program compare_sort, rclass
  1.     syntax varlist, [fsort *]
  2. 
.     timer clear
  3.     preserve
  4.         timer on 42
  5.         sort `varlist' , stable
  6.         timer off 42
  7.         tempfile file_sort
  8.         qui save `file_sort'
  9.     restore
 10.     qui timer list
 11.     local time_sort = r(t42)
 12. 
.     timer clear
 13.     preserve
 14.         timer on 43
 15.         qui hashsort `varlist', `options'
 16.         timer off 43
 17.         cf * using `file_sort'
 18.     restore
 19.     qui timer list
 20.     local time_hashsort = r(t43)
 21. 
.     if ( "`fsort'" == "fsort" ) {
 22.         timer clear
 23.         preserve
 24.             timer on 44
 25.             qui fsort `varlist'
 26.             timer off 44
 27.             cf * using `file_sort'
 28.         restore
 29.         qui timer list
 30.         local time_fsort = r(t44)
 31.     }
 32.     else {
 33.         local time_fsort = .
 34.     }
 35. 
.     local rs = `time_sort'  / `time_hashsort'
 36.     local rf = `time_fsort' / `time_hashsort'
 37.     di "    `:di %5.3g `time_sort'' | `:di %5.3g `time_fsort'' | `:di %8.3g `time_hashsort'' | `:di %11.3g `rs'' | `:di %11.3g `rf'' | `varlist'"
 38. end

. 
. capture program drop compare_gsort

. program compare_gsort, rclass
  1.     syntax anything, [*]
  2.     tempvar ix
  3.     gen long `ix' = _n
  4. 
.     timer clear
  5.     preserve
  6.         timer on 42
  7.         gsort `anything', mfirst
  8.         timer off 42
  9.         tempfile file_sort
 10.         qui save `file_sort'
 11.     restore
 12.     qui timer list
 13.     local time_sort = r(t42)
 14. 
.     timer clear
 15.     preserve
 16.         timer on 43
 17.         qui hashsort `anything', `options'
 18.         timer off 43
 19.         cf `:di subinstr("`anything'", "-", "", .)' using `file_sort'
 20.     restore
 21.     qui timer list
 22.     local time_hashsort = r(t43)
 23. 
.     local rs = `time_sort'  / `time_hashsort'
 24.     di "    `:di %5.3g `time_sort'' | `:di %8.3g `time_hashsort'' | `:di %11.3g `rs'' | `anything'"
 25. end

. 
. * ---------------------------------------------------------------------
. * Run the things
. 
. main, checks bench_test
Start: 15:27:40 25 Oct 2017
    test(passed): checks_corners, oncollision(error)

-------------------------------------
Basic unit-tests 15:28:41 25 Oct 2017
-------------------------------------
    test(passed): checks_gcollapse, oncollision(error)
    test(passed): checks_gegen, oncollision(error)
    test(passed): checks_isid, oncollision(error)
    test(passed): checks_levelsof, oncollision(error)
    test(passed): checks_unique, oncollision(error)
    test(passed): checks_hashsort, oncollision(error)

-----------------------------------------------------------
Consistency checks (vs collapse, egen) 15:29:05 25 Oct 2017
-----------------------------------------------------------










--------------------------------------------------------------------------------
consistency_gcollapse_gegen, oncollision(error)
--------------------------------------------------------------------------------



Checking gegen vs gcollapse. N = 100,000; varlist = 
----------------------------------------------------

Checking full range: 
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 18473/95132] range: 
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: 
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 16060/99106] range: 
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = -str_12
-----------------------------------------------------------

Checking full range: -str_12
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 3536/96463] range: -str_12
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: -str_12
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 14619/92099] range: -str_12
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = str_12 -str_32
------------------------------------------------------------------

Checking full range: str_12 -str_32
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 880/95375] range: str_12 -str_32
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: str_12 -str_32
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 9841/77944] range: str_12 -str_32
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = str_12 -str_32 str_4
------------------------------------------------------------------------

Checking full range: str_12 -str_32 str_4
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 17600/92444] range: str_12 -str_32 str_4
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: str_12 -str_32 str_4
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 4307/82381] range: str_12 -str_32 str_4
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = -double1
------------------------------------------------------------

Checking full range: -double1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 1536/89059] range: -double1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: -double1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 207/75834] range: -double1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = double1 -double2
--------------------------------------------------------------------

Checking full range: double1 -double2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 16960/84465] range: double1 -double2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: double1 -double2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 3137/77758] range: double1 -double2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = double1 -double2 double3
----------------------------------------------------------------------------

Checking full range: double1 -double2 double3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 21822/80897] range: double1 -double2 double3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: double1 -double2 double3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 20728/81219] range: double1 -double2 double3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = -int1
---------------------------------------------------------

Checking full range: -int1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 4363/85876] range: -int1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: -int1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 17677/99748] range: -int1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = int1 -int2
--------------------------------------------------------------

Checking full range: int1 -int2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 24323/80242] range: int1 -int2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: int1 -int2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 1105/76412] range: int1 -int2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = int1 -int2 int3
-------------------------------------------------------------------

Checking full range: int1 -int2 int3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 16257/96112] range: int1 -int2 int3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: int1 -int2 int3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 21207/78872] range: int1 -int2 int3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = -int1 -str_32 -double1
--------------------------------------------------------------------------

Checking full range: -int1 -str_32 -double1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 13609/79806] range: -int1 -str_32 -double1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: -int1 -str_32 -double1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 5111/82003] range: -int1 -str_32 -double1
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = int1 -str_32 double1 -int2 str_12 -double2
----------------------------------------------------------------------------------------------

Checking full range: int1 -str_32 double1 -int2 str_12 -double2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 19124/99883] range: int1 -str_32 double1 -int2 str_12 -double2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: int1 -str_32 double1 -int2 str_12 -double2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 21421/86819] range: int1 -str_32 double1 -int2 str_12 -double2
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)


Checking gegen vs gcollapse. N = 100,000; varlist = int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3
------------------------------------------------------------------------------------------------------------------

Checking full range: int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [ in 20899/83843] range: int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] range: int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 9419/88383] range: int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3
    compare_gegen_gcollapse (passed): mean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sum yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): median yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sd yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): iqr yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): first yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): last yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): firstnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): lastnm yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): semean yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sebinomial yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): sepoisson yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q10 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q30 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q70 yielded same results (tol = 1.00000000000e-06)
    compare_gegen_gcollapse (passed): q90 yielded same results (tol = 1.00000000000e-06)










--------------------------------------------------------------------------------
consistency_collapse, oncollision(error)
--------------------------------------------------------------------------------



Checking collapse. N = 50,000; varlist = 
-----------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 5913/47603], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 5591/46147], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = str_12
-----------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 6135/48782], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 9313/38061], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = str_12 str_32
------------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 1799/49118], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 1319/49206], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = str_12 str_32 str_4
------------------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 11105/48910], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 6991/43308], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = double1
------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 12232/41782], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 9695/48328], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = double1 double2
--------------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 6740/40235], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 566/40799], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = double1 double2 double3
----------------------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 1603/49922], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 8573/45838], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = int1
---------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 6134/39735], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 7141/44439], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = int1 int2
--------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 2038/40512], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 1651/45654], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = int1 int2 int3
-------------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 1766/42691], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 6700/48536], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = int1 str_32 double1
------------------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 10753/44430], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 1923/44726], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = int1 str_32 double1 int2 str_12 double2
--------------------------------------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 6744/47951], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 9119/49204], gcollapse results equal to collapse (tol = 1.00000000000e-06)


Checking collapse. N = 50,000; varlist = int1 str_32 double1 int2 str_12 double2 int3 str_4 double3
---------------------------------------------------------------------------------------------------
    compare_collapse (passed): full range, gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [ in 2492/45142], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 > 0 ], gcollapse results equal to collapse (tol = 1.00000000000e-06)
    compare_collapse (passed): [if random2 < 0  in 5136/45475], gcollapse results equal to collapse (tol = 1.00000000000e-06)

--------------------------------------------------------------------------------
consistency_egen, oncollision(error)
--------------------------------------------------------------------------------












Checking egen. N = 100,000; varlist = 
--------------------------------------

Checking full egen range: 
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .13, ratio    4)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .14, ratio  8.8)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  7.8e-02, ratio  4.9)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .12, ratio  7.8)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  7.8e-02, ratio  4.9)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .41, ratio   25)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .14, ratio  9.4)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 0 vs  .16, ratio    .)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .12, ratio  7.8)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 0 vs  .14, ratio    .)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .14, ratio  8.8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 0 vs  .23, ratio    .)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.7)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 0 vs  9.3e-02, ratio    .)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  7.8e-02, ratio  1.7)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 0 vs  .11, ratio    .)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  7.7e-02, ratio  4.8)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 15380/81653] egen range: 
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .17, ratio   11)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 0 vs  .22, ratio    .)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .17, ratio  5.5)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 0 vs  .22, ratio    .)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .19, ratio  5.8)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .14, ratio  9.4)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 0 vs  .23, ratio    .)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .11, ratio  6.9)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 0 vs  .11, ratio    .)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 0 vs  .13, ratio    .)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .11, ratio  6.8)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 0 vs  .13, ratio    .)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .11, ratio  6.9)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  9.3e-02, ratio  5.8)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 0 vs  .27, ratio    .)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 0 vs   .2, ratio    .)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 0 vs  .19, ratio    .)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: 
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.4e-02 vs  .19, ratio   13)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs   .2, ratio  2.6)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .23, ratio   16)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.3e-02 vs   .2, ratio  6.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .19, ratio   12)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.6)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .11, ratio  6.8)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .11, ratio  1.2)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .17, ratio  5.5)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  9.5e-02, ratio  6.3)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .13, ratio  7.8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .13, ratio    4)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .11, ratio  1.8)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .38, ratio   25)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .25, ratio  7.8)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 9006/86773] egen range: 
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.5)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .19, ratio    3)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .19, ratio    2)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .22, ratio   15)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 0 vs  .23, ratio    .)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .17, ratio  3.7)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .3, ratio  9.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 5.9e-02 vs  .28, ratio  4.8)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .11, ratio  7.3)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  7.8e-02, ratio  4.9)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .17, ratio   11)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 9.3e-02 vs  7.9e-02, ratio  .85)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  7.8e-02, ratio  4.9)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .11, ratio  7.3)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  9.4e-02, ratio  1.5)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .19, ratio  5.8)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = str_12
--------------------------------------------

Checking full egen range: str_12
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .31, ratio    5)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 9.3e-02 vs  .27, ratio  2.9)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .22, ratio  6.8)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .63, ratio   13)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .36, ratio   12)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .36, ratio  5.8)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .34, ratio  7.3)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .36, ratio   12)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .48, ratio   32)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio    7)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .37, ratio    8)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .38, ratio   12)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .39, ratio   26)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .28, ratio  6.1)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 210/92217] egen range: str_12
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .22, ratio  6.8)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs   .2, ratio  6.8)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .2, ratio   14)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .2, ratio  6.4)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .23, ratio  5.1)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .78, ratio   12)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.7)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 2.8e-02 vs  .42, ratio   15)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.5e-02 vs   .3, ratio  6.6)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .28, ratio  4.5)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio    7)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .39, ratio   26)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .34, ratio  4.4)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 9.5e-02 vs  .27, ratio  2.8)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: str_12
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.6)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 7.9e-02 vs  .26, ratio  3.3)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .27, ratio  4.2)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .67, ratio   11)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .44, ratio   14)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .45, ratio   30)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.9e-02 vs  .34, ratio    7)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio    7)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs   .3, ratio  6.5)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .33, ratio  6.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .33, ratio  4.2)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .42, ratio   26)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; .11 vs  .42, ratio  3.9)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 14327/76148] egen range: str_12
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.3e-02 vs  .23, ratio  7.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .28, ratio  4.5)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 0 vs  .33, ratio    .)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .64, ratio   40)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .36, ratio   24)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .34, ratio   22)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .33, ratio   22)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.2e-02 vs  .28, ratio   23)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.6)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.5)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 8.4e-02 vs  .29, ratio  3.5)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .28, ratio  6.1)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = str_12 str_32
---------------------------------------------------

Checking full egen range: str_12 str_32
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.6)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.4e-02 vs  .23, ratio  5.3)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.7)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .25, ratio  5.2)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 5.0e-02 vs  .26, ratio  5.2)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .86, ratio   14)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .48, ratio  5.2)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 7.7e-02 vs  .45, ratio  5.9)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .36, ratio  4.6)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .39, ratio  6.2)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .41, ratio  8.8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .28, ratio  4.5)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .27, ratio  5.5)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .33, ratio   10)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .33, ratio  7.2)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .28, ratio  9.4)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 22892/82813] egen range: str_12 str_32
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; .11 vs  .36, ratio  3.3)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .23, ratio  5.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.5)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .77, ratio   48)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .38, ratio    6)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .28, ratio  8.8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .34, ratio   21)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   21)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .34, ratio  7.3)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: str_12 str_32
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs   .3, ratio  3.8)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .27, ratio  4.2)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.6)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .31, ratio  6.7)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .81, ratio   17)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .39, ratio    5)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 7.7e-02 vs  .39, ratio  5.1)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .36, ratio   12)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .42, ratio   13)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .42, ratio  6.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .39, ratio  6.2)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 7.7e-02 vs  .38, ratio  4.9)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .36, ratio  7.6)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .33, ratio  6.8)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .38, ratio    8)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 20556/76882] egen range: str_12 str_32
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .27, ratio  8.3)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.4e-02 vs  .28, ratio   20)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .31, ratio  6.8)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .89, ratio   14)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .44, ratio  9.5)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .38, ratio   23)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio    7)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs   .3, ratio  4.8)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 9.5e-02 vs  .36, ratio  3.8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   21)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   21)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 7.7e-02 vs  .45, ratio  5.9)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .47, ratio   31)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .45, ratio   28)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .34, ratio  5.4)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = str_12 str_32 str_4
---------------------------------------------------------

Checking full egen range: str_12 str_32 str_4
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .25, ratio  5.2)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .27, ratio  4.2)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .27, ratio  4.2)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .28, ratio  4.5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .75, ratio   12)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .38, ratio  4.8)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .41, ratio  6.4)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .38, ratio    6)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio    7)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; .14 vs  .56, ratio    4)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .48, ratio  7.7)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .45, ratio  4.8)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .41, ratio  6.4)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .59, ratio  9.4)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 7.9e-02 vs  .34, ratio  4.3)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; .11 vs  .34, ratio  3.1)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 16874/89851] egen range: str_12 str_32 str_4
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .33, ratio  7.2)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .31, ratio  6.5)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.6)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; .16 vs  .33, ratio  2.1)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs   .3, ratio  6.5)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 6.4e-02 vs  .23, ratio  3.6)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .61, ratio  9.8)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .31, ratio  6.8)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .34, ratio  7.5)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .42, ratio  9.2)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .34, ratio  7.1)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .36, ratio  5.7)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .42, ratio  4.5)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .38, ratio   13)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs   .5, ratio  5.3)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .36, ratio  5.7)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .36, ratio  5.8)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .27, ratio  4.3)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: str_12 str_32 str_4
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .25, ratio  5.2)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .23, ratio  5.1)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .69, ratio   22)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .31, ratio  6.6)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .39, ratio  6.2)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .39, ratio  8.3)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .34, ratio  7.5)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .36, ratio  3.8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 7.7e-02 vs   .4, ratio  5.1)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 9.3e-02 vs  .39, ratio  4.2)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; .13 vs  .44, ratio  3.5)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .36, ratio  5.7)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 24608/75703] egen range: str_12 str_32 str_4
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .33, ratio   10)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 7.0e-02 vs  .26, ratio  3.7)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .33, ratio  4.2)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .64, ratio   14)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .34, ratio   23)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .38, ratio    8)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .39, ratio   13)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .38, ratio   23)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .38, ratio   25)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .38, ratio   12)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = double1
---------------------------------------------

Checking full egen range: double1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.4e-02 vs  .22, ratio  6.4)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .23, ratio   16)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs   .2, ratio  3.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .66, ratio   21)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .38, ratio   23)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .41, ratio  6.5)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .44, ratio   14)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .44, ratio   27)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .39, ratio   12)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs   .3, ratio  4.7)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .36, ratio   22)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .38, ratio  4.8)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 24185/77693] egen range: double1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .25, ratio  7.8)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 0 vs  .22, ratio    .)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 0 vs  .31, ratio    .)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .33, ratio   22)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .55, ratio   36)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 0 vs  .28, ratio    .)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 0 vs  .36, ratio    .)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.5)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: double1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 7.9e-02 vs  .25, ratio  3.2)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.7)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .67, ratio   14)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .42, ratio   26)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 9.3e-02 vs  .31, ratio  3.4)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .42, ratio   14)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio    7)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .33, ratio  3.5)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .31, ratio  6.5)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .33, ratio   22)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 23418/82894] egen range: double1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .39, ratio   26)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; .11 vs  .27, ratio  2.4)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 0 vs  .22, ratio    .)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .2, ratio   13)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .2, ratio   14)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .67, ratio   45)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .39, ratio   24)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .44, ratio   27)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .41, ratio   27)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .31, ratio    5)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .33, ratio   22)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 0 vs  .36, ratio    .)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .38, ratio   23)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 0 vs  .31, ratio    .)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = double1 double2
-----------------------------------------------------

Checking full egen range: double1 double2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .22, ratio   15)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .27, ratio  8.3)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.7)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .19, ratio    4)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .34, ratio  7.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .73, ratio   46)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs   .3, ratio  4.7)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .38, ratio   12)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   21)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .27, ratio  4.2)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 21570/88388] egen range: double1 double2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.7)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.4e-02 vs   .3, ratio   21)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs   .2, ratio  4.2)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .25, ratio  3.2)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .22, ratio  4.5)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .69, ratio  7.3)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .36, ratio   22)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .39, ratio   24)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .34, ratio   21)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: double1 double2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.6)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.6)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.6)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .27, ratio  4.2)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .28, ratio  5.8)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .22, ratio  4.5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .28, ratio  4.5)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .63, ratio    8)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .28, ratio  3.6)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .31, ratio  6.8)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .36, ratio   12)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .28, ratio  5.9)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .36, ratio  7.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.4e-02 vs  .39, ratio   28)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .39, ratio   12)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .39, ratio   12)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.6)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 415/75970] egen range: double1 double2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.7e-02 vs  .37, ratio   22)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .73, ratio   46)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .42, ratio   28)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .27, ratio  8.3)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .34, ratio   21)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .38, ratio   23)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .39, ratio   24)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; .12 vs   .3, ratio  2.4)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = double1 double2 double3
-------------------------------------------------------------

Checking full egen range: double1 double2 double3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .22, ratio  3.5)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .22, ratio  6.8)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .22, ratio   15)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 7.6e-02 vs  .28, ratio  3.7)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .2, ratio  4.3)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .66, ratio   21)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .34, ratio  7.3)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio    7)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .47, ratio   29)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .28, ratio  6.1)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .38, ratio  4.8)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .38, ratio   25)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .45, ratio   14)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .31, ratio    5)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 309/89710] egen range: double1 double2 double3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .27, ratio  3.4)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; .11 vs  .31, ratio  2.9)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .84, ratio   18)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .28, ratio  8.8)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .38, ratio   12)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .41, ratio   27)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .45, ratio   28)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .48, ratio  7.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.4e-02 vs  .27, ratio   19)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.6)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: double1 double2 double3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.7)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .22, ratio  4.5)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .23, ratio  3.7)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .23, ratio  5.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.5)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .67, ratio   42)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .34, ratio  7.3)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .44, ratio   29)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .5, ratio   11)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.6)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .42, ratio   14)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .36, ratio   12)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .34, ratio   22)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .37, ratio    8)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .33, ratio  6.8)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 1012/85720] egen range: double1 double2 double3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .23, ratio    3)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.6)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .36, ratio   12)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 9.3e-02 vs  .22, ratio  2.4)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .59, ratio   13)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   21)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .33, ratio   22)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.7e-02 vs  .31, ratio   18)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .34, ratio   22)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .3, ratio  9.3)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .36, ratio   24)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .41, ratio   13)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .5, ratio   33)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .33, ratio  5.3)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .27, ratio  8.9)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = int1
------------------------------------------

Checking full egen range: int1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .2, ratio   13)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .19, ratio    4)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .2, ratio  4.3)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .34, ratio   23)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .17, ratio  2.7)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .67, ratio  7.2)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .34, ratio   23)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .39, ratio   24)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .33, ratio  4.2)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .36, ratio   22)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.2e-02 vs  .31, ratio   26)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 19308/88795] egen range: int1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .22, ratio   15)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.5)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 0 vs  .23, ratio    .)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 0 vs   .7, ratio    .)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .45, ratio   28)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; .11 vs  .53, ratio  4.8)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .38, ratio    8)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .33, ratio   22)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .36, ratio   22)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .36, ratio   22)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .4, ratio   25)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .39, ratio  8.3)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 0 vs  .31, ratio    .)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: int1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.3e-02 vs  .22, ratio   17)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .22, ratio   15)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.6)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.3e-02 vs  .19, ratio  5.6)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .59, ratio   37)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.7)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .28, ratio  8.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs   .3, ratio  6.5)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .28, ratio  8.8)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .31, ratio  6.6)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 4726/82572] egen range: int1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .2, ratio  6.3)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .22, ratio   15)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .2, ratio  4.3)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .19, ratio  5.9)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .59, ratio   40)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .36, ratio   24)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .38, ratio   25)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; .13 vs  .38, ratio    3)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 6.4e-02 vs  .33, ratio  5.1)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .27, ratio  3.4)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = int1 int2
-----------------------------------------------

Checking full egen range: int1 int2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs   .2, ratio  6.8)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .19, ratio  6.1)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .2, ratio   14)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .22, ratio  6.8)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.6)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.5)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .23, ratio  5.1)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .7, ratio   44)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .31, ratio  6.5)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .3, ratio  9.3)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   21)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .28, ratio  8.8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs   .3, ratio  9.9)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 17398/92504] egen range: int1 int2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .2, ratio   13)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .2, ratio   13)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .2, ratio   14)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.5)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .22, ratio   15)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.5)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .7, ratio   44)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .33, ratio   22)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .45, ratio   28)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   19)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: int1 int2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .2, ratio   14)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .19, ratio    6)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .2, ratio   13)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .2, ratio   13)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .19, ratio    6)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .2, ratio   14)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .19, ratio  6.1)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .56, ratio   35)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .27, ratio  8.3)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.7)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .27, ratio  8.3)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.4e-02 vs  .25, ratio   18)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 18808/91489] egen range: int1 int2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio    7)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .2, ratio   13)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .19, ratio   12)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .22, ratio   15)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .2, ratio   14)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 0 vs   .2, ratio    .)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .2, ratio   14)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .56, ratio   38)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 0 vs  .27, ratio    .)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 0 vs  .25, ratio    .)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 0 vs  .23, ratio    .)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = int1 int2 int3
----------------------------------------------------

Checking full egen range: int1 int2 int3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .19, ratio  6.1)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.5)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.5)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .19, ratio   12)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 7.9e-02 vs  .66, ratio  8.3)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.5)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .36, ratio   22)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .31, ratio  9.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .5, ratio   33)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .44, ratio   27)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .34, ratio   22)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .23, ratio   16)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 19467/85829] egen range: int1 int2 int3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .2, ratio  6.4)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.6e-02 vs   .2, ratio  5.5)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .19, ratio  6.1)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .2, ratio   13)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .2, ratio   14)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .19, ratio   12)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .58, ratio   36)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: int1 int2 int3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .22, ratio  7.3)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .25, ratio  7.8)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .22, ratio  6.8)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.6)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs   .2, ratio  6.8)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .61, ratio   20)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   20)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .3, ratio  9.3)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .38, ratio    8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 20823/85914] egen range: int1 int2 int3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio    7)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .22, ratio   15)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.3e-02 vs  .23, ratio   18)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .42, ratio   26)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; .14 vs  .95, ratio  6.9)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 9.5e-02 vs  .36, ratio  3.8)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .31, ratio   20)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   21)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .36, ratio   24)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .25, ratio  7.8)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = int1 str_32 double1
---------------------------------------------------------

Checking full egen range: int1 str_32 double1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio    7)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .2, ratio  6.3)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .19, ratio  3.9)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .27, ratio  8.3)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs   .2, ratio  3.3)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .17, ratio  3.7)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs   .2, ratio  4.4)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .2, ratio  6.5)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .78, ratio   25)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; .14 vs  .47, ratio  3.4)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 9.4e-02 vs  .42, ratio  4.5)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs   .3, ratio  6.2)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs   .3, ratio  9.9)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 5.0e-02 vs  .34, ratio  6.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .36, ratio  5.8)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.7)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 11668/78137] egen range: int1 str_32 double1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .22, ratio  6.8)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .2, ratio  4.3)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .2, ratio  6.3)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .2, ratio  6.3)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .22, ratio   14)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .67, ratio   22)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   21)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .36, ratio   12)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .28, ratio  9.4)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: int1 str_32 double1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .2, ratio  6.3)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .22, ratio  7.1)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .22, ratio  6.8)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs   .2, ratio  6.8)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.6)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .23, ratio   15)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .73, ratio   15)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs   .3, ratio  9.9)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs   .3, ratio  9.3)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.5)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .31, ratio  6.5)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 16911/90682] egen range: int1 str_32 double1
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.6)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .27, ratio   17)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .25, ratio  7.8)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .27, ratio  8.3)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .23, ratio  7.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .61, ratio   20)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   20)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .28, ratio   19)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .25, ratio   17)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs   .3, ratio   20)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .28, ratio   18)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .27, ratio  8.3)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = int1 str_32 double1 int2 str_12 double2
-----------------------------------------------------------------------------

Checking full egen range: int1 str_32 double1 int2 str_12 double2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .31, ratio    5)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .22, ratio  4.8)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.7)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.7)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .22, ratio  3.5)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .67, ratio   14)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .35, ratio  5.5)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .36, ratio  7.6)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .31, ratio    5)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .34, ratio  5.4)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .34, ratio  5.4)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio  7.1)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio    7)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .45, ratio  9.4)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .31, ratio  6.7)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .38, ratio   12)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .27, ratio  4.2)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 16318/92849] egen range: int1 str_32 double1 int2 str_12 double2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 7.9e-02 vs  .23, ratio    3)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .23, ratio  4.9)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .23, ratio    3)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .28, ratio  6.1)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .64, ratio   14)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .38, ratio    8)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .31, ratio    5)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .41, ratio  8.8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs   .3, ratio  4.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .36, ratio  7.7)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs   .3, ratio  6.5)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: int1 str_32 double1 int2 str_12 double2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 7.9e-02 vs  .27, ratio  3.4)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.7)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .27, ratio  5.8)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .24, ratio  3.8)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .83, ratio   26)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .31, ratio  6.5)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .34, ratio  7.5)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .36, ratio  7.6)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .38, ratio    8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .39, ratio  8.3)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .36, ratio   12)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .31, ratio  6.6)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .28, ratio  4.5)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 21226/86834] egen range: int1 str_32 double1 int2 str_12 double2
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.5)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.6)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .25, ratio   16)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .27, ratio   18)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .67, ratio   22)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs   .3, ratio   19)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .31, ratio  6.6)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 1.6e-02 vs  .33, ratio   21)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .33, ratio   10)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .36, ratio  5.8)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .31, ratio  6.6)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .38, ratio   12)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .28, ratio  8.8)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 1.5e-02 vs  .31, ratio   21)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .34, ratio   11)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)


Checking egen. N = 100,000; varlist = int1 str_32 double1 int2 str_12 double2 int3 str_4 double3
------------------------------------------------------------------------------------------------

Checking full egen range: int1 str_32 double1 int2 str_12 double2 int3 str_4 double3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .25, ratio  3.2)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .26, ratio  4.2)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 7.8e-02 vs  .34, ratio  4.4)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .31, ratio    5)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .25, ratio    4)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .23, ratio  3.7)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .84, ratio   14)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 7.9e-02 vs  .41, ratio  5.1)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 7.9e-02 vs  .34, ratio  4.3)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .36, ratio  5.8)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .34, ratio  5.5)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .36, ratio  5.7)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs   .3, ratio  4.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .34, ratio  7.3)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .52, ratio   11)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .34, ratio  7.5)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .28, ratio  4.5)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .28, ratio  4.5)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [ in 19172/84333] egen range: int1 str_32 double1 int2 str_12 double2 int3 str_4 double3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.5)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.7)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .22, ratio  4.7)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .27, ratio  8.9)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .66, ratio   21)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .28, ratio  5.9)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .31, ratio  6.8)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .31, ratio   10)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs   .3, ratio  9.9)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .31, ratio    5)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .31, ratio  6.6)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .42, ratio    9)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs   .3, ratio  6.3)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .27, ratio  8.5)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 > 0 ] egen range: int1 str_32 double1 int2 str_12 double2 int3 str_4 double3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.6)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.7)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .23, ratio  3.7)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .27, ratio  5.8)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .23, ratio    5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .25, ratio  5.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .67, ratio   14)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .33, ratio  5.3)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .41, ratio  8.7)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .28, ratio  5.8)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .33, ratio  7.2)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .31, ratio  6.7)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .31, ratio  9.8)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .33, ratio    7)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .39, ratio  8.5)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .36, ratio  7.7)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.6)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.7)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)

Checking [if random2 < 0  in 1470/77006] egen range: int1 str_32 double1 int2 str_12 double2 int3 str_4 double3
    compare_egen (passed): gegen total results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.6)
    compare_egen (passed): gegen sum results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .27, ratio  5.6)
    compare_egen (passed): gegen mean results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs   .3, ratio  4.7)
    compare_egen (passed): gegen sd results similar to egen (tol = 1.00000000000e-06; 6.4e-02 vs  .28, ratio  4.4)
    compare_egen (passed): gegen max results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .28, ratio  9.1)
    compare_egen (passed): gegen min results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .23, ratio  7.5)
    compare_egen (passed): gegen count results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .25, ratio  8.1)
    compare_egen (passed): gegen median results similar to egen (tol = 1.00000000000e-06; 3.2e-02 vs  .27, ratio  8.3)
    compare_egen (passed): gegen iqr results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .67, ratio   14)
    compare_egen (passed): gegen percentile 1 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .33, ratio  7.1)
    compare_egen (passed): gegen percentile 10 results similar to egen (tol = 1.00000000000e-06; 4.6e-02 vs  .31, ratio  6.8)
    compare_egen (passed): gegen percentile 30 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs   .3, ratio  9.6)
    compare_egen (passed): gegen percentile 50 results similar to egen (tol = 1.00000000000e-06; 3.1e-02 vs  .33, ratio   11)
    compare_egen (passed): gegen percentile 70 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .34, ratio  7.3)
    compare_egen (passed): gegen percentile 90 results similar to egen (tol = 1.00000000000e-06; 3.0e-02 vs  .39, ratio   13)
    compare_egen (passed): gegen percentile 99 results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .42, ratio    9)
    compare_egen (passed): gegen tag results similar to egen (tol = 1.00000000000e-06; 6.2e-02 vs  .39, ratio  6.3)
    compare_egen (passed): gegen tag, missing results similar to egen (tol = 1.00000000000e-06; 6.3e-02 vs  .31, ratio    5)
    compare_egen (passed): gegen group results similar to egen (tol = 1.00000000000e-06; 4.8e-02 vs  .28, ratio  5.8)
    compare_egen (passed): gegen group, missing results similar to egen (tol = 1.00000000000e-06; 4.7e-02 vs  .28, ratio    6)
    compare_egen (passed): gegen  counts results similar to gegen count (tol = 1.00000000000e-06)










--------------------------------------------------------------------------------
compare_isid, N = 100,000, oncollision(error)
--------------------------------------------------------------------------------

    compare_isid (passed): str_12 was not an id
    compare_isid (passed): ix str_12 was an id
    compare_isid (passed): rsort str_12 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix str_12 in 100 / 50000 was an id
    compare_isid (passed): ix str_12 in 50000 / 100000 was not an id
    compare_isid (passed): ix str_12 if _n < 50000 was an id
    compare_isid (passed): ix str_12 if _n > 50000 was not an id
    compare_isid (passed): ix str_12 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix str_12 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): str_12 str_32 was not an id
    compare_isid (passed): ix str_12 str_32 was an id
    compare_isid (passed): rsort str_12 str_32 was not an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix str_12 str_32 in 100 / 50000 was an id
    compare_isid (passed): ix str_12 str_32 in 50000 / 100000 was not an id
    compare_isid (passed): ix str_12 str_32 if _n < 50000 was an id
    compare_isid (passed): ix str_12 str_32 if _n > 50000 was not an id
    compare_isid (passed): ix str_12 str_32 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix str_12 str_32 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): str_12 str_32 str_4 was not an id
    compare_isid (passed): ix str_12 str_32 str_4 was an id
    compare_isid (passed): rsort str_12 str_32 str_4 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix str_12 str_32 str_4 in 100 / 50000 was an id
    compare_isid (passed): ix str_12 str_32 str_4 in 50000 / 100000 was not an id
    compare_isid (passed): ix str_12 str_32 str_4 if _n < 50000 was an id
    compare_isid (passed): ix str_12 str_32 str_4 if _n > 50000 was not an id
    compare_isid (passed): ix str_12 str_32 str_4 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix str_12 str_32 str_4 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): double1 was not an id
    compare_isid (passed): ix double1 was an id
    compare_isid (passed): rsort double1 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix double1 in 100 / 50000 was an id
    compare_isid (passed): ix double1 in 50000 / 100000 was not an id
    compare_isid (passed): ix double1 if _n < 50000 was an id
    compare_isid (passed): ix double1 if _n > 50000 was not an id
    compare_isid (passed): ix double1 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix double1 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): double1 double2 was not an id
    compare_isid (passed): ix double1 double2 was an id
    compare_isid (passed): rsort double1 double2 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix double1 double2 in 100 / 50000 was an id
    compare_isid (passed): ix double1 double2 in 50000 / 100000 was not an id
    compare_isid (passed): ix double1 double2 if _n < 50000 was an id
    compare_isid (passed): ix double1 double2 if _n > 50000 was not an id
    compare_isid (passed): ix double1 double2 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix double1 double2 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): double1 double2 double3 was not an id
    compare_isid (passed): ix double1 double2 double3 was an id
    compare_isid (passed): rsort double1 double2 double3 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix double1 double2 double3 in 100 / 50000 was an id
    compare_isid (passed): ix double1 double2 double3 in 50000 / 100000 was not an id
    compare_isid (passed): ix double1 double2 double3 if _n < 50000 was an id
    compare_isid (passed): ix double1 double2 double3 if _n > 50000 was not an id
    compare_isid (passed): ix double1 double2 double3 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix double1 double2 double3 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): int1 was not an id
    compare_isid (passed): ix int1 was an id
    compare_isid (passed): rsort int1 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix int1 in 100 / 50000 was an id
    compare_isid (passed): ix int1 in 50000 / 100000 was not an id
    compare_isid (passed): ix int1 if _n < 50000 was an id
    compare_isid (passed): ix int1 if _n > 50000 was not an id
    compare_isid (passed): ix int1 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix int1 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): int1 int2 was not an id
    compare_isid (passed): ix int1 int2 was an id
    compare_isid (passed): rsort int1 int2 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix int1 int2 in 100 / 50000 was an id
    compare_isid (passed): ix int1 int2 in 50000 / 100000 was not an id
    compare_isid (passed): ix int1 int2 if _n < 50000 was an id
    compare_isid (passed): ix int1 int2 if _n > 50000 was not an id
    compare_isid (passed): ix int1 int2 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix int1 int2 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): int1 int2 int3 was not an id
    compare_isid (passed): ix int1 int2 int3 was an id
    compare_isid (passed): rsort int1 int2 int3 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix int1 int2 int3 in 100 / 50000 was an id
    compare_isid (passed): ix int1 int2 int3 in 50000 / 100000 was not an id
    compare_isid (passed): ix int1 int2 int3 if _n < 50000 was an id
    compare_isid (passed): ix int1 int2 int3 if _n > 50000 was not an id
    compare_isid (passed): ix int1 int2 int3 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix int1 int2 int3 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): int1 str_32 double1 was not an id
    compare_isid (passed): ix int1 str_32 double1 was an id
    compare_isid (passed): rsort int1 str_32 double1 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix int1 str_32 double1 in 100 / 50000 was an id
    compare_isid (passed): ix int1 str_32 double1 in 50000 / 100000 was not an id
    compare_isid (passed): ix int1 str_32 double1 if _n < 50000 was an id
    compare_isid (passed): ix int1 str_32 double1 if _n > 50000 was not an id
    compare_isid (passed): ix int1 str_32 double1 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix int1 str_32 double1 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): int1 str_32 double1 int2 str_12 double2 was not an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 was an id
    compare_isid (passed): rsort int1 str_32 double1 int2 str_12 double2 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 in 100 / 50000 was an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 in 50000 / 100000 was not an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 if _n < 50000 was an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 if _n > 50000 was not an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 if _n > 25000 in 66667 / 100000 was not an id


    compare_isid (passed): int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 was not an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 was an id
    compare_isid (passed): rsort int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 was an id
    compare_isid (passed): ix was not an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 in 100 / 50000 was an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 in 50000 / 100000 was not an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 if _n < 50000 was an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 if _n > 50000 was not an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 if _n < 25000 in 100 / 50000 was an id
    compare_isid (passed): ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 if _n > 25000 in 66667 / 100000 was not an id












--------------------------------------------------------------------------------
compare_levelsof, N = 500,000, oncollision(error)
--------------------------------------------------------------------------------

    compare_levelsof (passed): glevelsof str_12 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_12 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_12 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_12 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_12 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_12 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_12 [if] [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_12 [if] [in] returned the same levels as levelsof


    compare_levelsof (passed): glevelsof str_32 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_32 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_32 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_32 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_32 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_32 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_32 [if] [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_32 [if] [in] returned the same levels as levelsof


    compare_levelsof (passed): glevelsof str_4 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_4 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_4 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_4 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_4 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_4 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_4 [if] [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof str_4 [if] [in] returned the same levels as levelsof


    compare_levelsof (passed): glevelsof double1 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double1 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double1 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double1 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double1 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double1 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double1 [if] [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double1 [if] [in] returned the same levels as levelsof


    compare_levelsof (passed): glevelsof double2 returned similar levels as levelsof (tol = 1e-15)
    compare_levelsof (passed): glevelsof double2 returned similar levels as levelsof (tol = 1e-15)
    compare_levelsof (passed): glevelsof double2 [in] returned similar levels as levelsof (tol = 1e-15)
    compare_levelsof (passed): glevelsof double2 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double2 [if] returned similar levels as levelsof (tol = 1e-15)
    compare_levelsof (passed): glevelsof double2 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double2 [if] [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double2 [if] [in] returned the same levels as levelsof


    compare_levelsof (passed): glevelsof double3 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double3 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double3 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double3 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double3 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double3 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double3 [if] [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof double3 [if] [in] returned the same levels as levelsof


    compare_levelsof (passed): glevelsof int1 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int1 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int1 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int1 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int1 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int1 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int1 [if] [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int1 [if] [in] returned the same levels as levelsof


    compare_levelsof (passed): glevelsof int2 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int2 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int2 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int2 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int2 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int2 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int2 [if] [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int2 [if] [in] returned the same levels as levelsof


    compare_levelsof (passed): glevelsof int3 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int3 returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int3 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int3 [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int3 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int3 [if] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int3 [if] [in] returned the same levels as levelsof
    compare_levelsof (passed): glevelsof int3 [if] [in] returned the same levels as levelsof












--------------------------------------------------------------------------------
compare_unique, N = 100,000, oncollision(error)
--------------------------------------------------------------------------------

    compare_unique (passed): unique and gunique str_12 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 gave the same number of levels
    compare_unique (passed): unique and gunique rsort str_12 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique str_12 str_32 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 gave the same number of levels
    compare_unique (passed): unique and gunique rsort str_12 str_32 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique str_12 str_32 str_4 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 str_4 gave the same number of levels
    compare_unique (passed): unique and gunique rsort str_12 str_32 str_4 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 str_4 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 str_4 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 str_4 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 str_4 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 str_4 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix str_12 str_32 str_4 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique double1 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 gave the same number of levels
    compare_unique (passed): unique and gunique rsort double1 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique double1 double2 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 gave the same number of levels
    compare_unique (passed): unique and gunique rsort double1 double2 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique double1 double2 double3 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 double3 gave the same number of levels
    compare_unique (passed): unique and gunique rsort double1 double2 double3 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 double3 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 double3 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 double3 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 double3 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 double3 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix double1 double2 double3 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique int1 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 gave the same number of levels
    compare_unique (passed): unique and gunique rsort int1 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique int1 int2 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 gave the same number of levels
    compare_unique (passed): unique and gunique rsort int1 int2 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique int1 int2 int3 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 int3 gave the same number of levels
    compare_unique (passed): unique and gunique rsort int1 int2 int3 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 int3 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 int3 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 int3 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 int3 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 int3 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 int2 int3 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique int1 str_32 double1 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 gave the same number of levels
    compare_unique (passed): unique and gunique rsort int1 str_32 double1 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique int1 str_32 double1 int2 str_12 double2 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 gave the same number of levels
    compare_unique (passed): unique and gunique rsort int1 str_32 double1 int2 str_12 double2 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 if _n > 25000 in 66667 / 100000 gave the same number of levels


    compare_unique (passed): unique and gunique int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 gave the same number of levels
    compare_unique (passed): unique and gunique rsort int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 gave the same number of levels
    compare_unique (passed): unique and gunique ix gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 in 50000 / 100000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 if _n < 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 if _n > 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 if _n < 25000 in 100 / 50000 gave the same number of levels
    compare_unique (passed): unique and gunique ix int1 str_32 double1 int2 str_12 double2 int3 str_4 double3 if _n > 25000 in 66667 / 100000 gave the same number of levels




Benchmark vs gsort, obs = 10,000, J = 1,000 (in seconds; datasets are compared via cf)
    gsort | hashsort | ratio (g/h) | varlist
    ----- | -------- | ----------- | -------
     .016 |        0 |           . | -str_12
     .031 |        0 |           . | str_12 -str_32
     .048 |        0 |           . | str_12 -str_32 str_4
     .015 |        0 |           . | -double1
     .016 |        0 |           . | double1 -double2
     .031 |        0 |           . | double1 -double2 double3
     .015 |        0 |           . | -int1
     .016 |        0 |           . | int1 -int2
     .016 |        0 |           . | int1 -int2 int3
     .048 |     .016 |           3 | -int1 -str_32 -double1
     .078 |     .016 |        4.88 | int1 -str_32 double1 -int2 str_12 -double2
      .11 |     .016 |        6.88 | int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3


Benchmark vs sort, obs = 100,000, J = 1,000 (in seconds; datasets are compared via cf)
     sort | fsort | hashsort | ratio (s/h) | ratio (f/h) | varlist
     ---- | ----- | -------- | ----------- | ----------- | -------
     .171 |  .266 |     .063 |        2.71 |        4.22 | str_12
     .203 |  .203 |     .078 |         2.6 |         2.6 | str_12 str_32
     .219 |  .219 |     .078 |        2.81 |        2.81 | str_12 str_32 str_4
     .141 |  .091 |     .062 |        2.27 |        1.47 | double1
     .156 |   .11 |     .079 |        1.97 |        1.39 | double1 double2
     .156 |   .14 |     .156 |           1 |        .897 | double1 double2 double3
     .156 |  .093 |     .063 |        2.48 |        1.48 | int1
     .141 |  .094 |     .062 |        2.27 |        1.52 | int1 int2
     .157 |  .109 |     .062 |        2.53 |        1.76 | int1 int2 int3
     .172 |     . |     .078 |        2.21 |           . | int1 str_32 double1
     .187 |     . |     .094 |        1.99 |           . | int1 str_32 double1 int2 str_12 double2
      .25 |     . |     .124 |        2.02 |           . | int1 str_32 double1 int2 str_12 double2 int3 str_4 double3

--------------------------------------------------------------------------------
compare_hashsort, oncollision(error)
--------------------------------------------------------------------------------












Benchmark vs collapse (in seconds)
    - obs:     100,000
    - groups:  100
    - vars:    x1-x15 ~ N(0, 10)
    - stats:   sum
    - options: fast


    collapse | fcollapse | gcollapse | ratio (c/g) | ratio (f/g) | varlist
    -------- | --------- | --------- | ----------- | ----------- | -------
        .407 |      .188 |      .078 |        5.22 |        2.41 | 
        .859 |      .188 |      .078 |          11 |        2.41 | str_12 str_32 str_4
        .687 |      .128 |      .079 |         8.7 |        1.62 | double1 double2 double3
         .69 |      .157 |      .078 |        8.85 |        2.01 | int1 int2 int3
        .765 |         . |      .094 |        8.14 |           . | int1 str_32 double1

--------------------------------------------------------------------------------
bench_collapse, oncollision(error) style(sum) vars(15)
--------------------------------------------------------------------------------












Benchmark vs collapse (in seconds)
    - obs:     100,000
    - groups:  100
    - vars:    x1-x6 ~ N(0, 10)
    - stats:   mean median min max
    - options: fast


    collapse | fcollapse | gcollapse | ratio (c/g) | ratio (f/g) | varlist
    -------- | --------- | --------- | ----------- | ----------- | -------
        3.36 |      .234 |      .063 |        53.3 |        3.71 | 
        5.24 |       .25 |      .109 |          48 |        2.29 | str_12 str_32 str_4
        1.25 |      .156 |      .079 |        15.8 |        1.97 | double1 double2 double3
        1.31 |      .173 |      .078 |        16.8 |        2.22 | int1 int2 int3
        1.42 |         . |      .078 |        18.2 |           . | int1 str_32 double1

--------------------------------------------------------------------------------
bench_collapse, oncollision(error) style(ftools) vars(6)
--------------------------------------------------------------------------------












Benchmark vs collapse (in seconds)
    - obs:     100,000
    - groups:  100
    - vars:    x1 ~ N(0, 10)
    - stats:   all available plus percentiles 10, 30, 70, 90
    - options: fast


    collapse | fcollapse | gcollapse | ratio (c/g) | ratio (f/g) | varlist
    -------- | --------- | --------- | ----------- | ----------- | -------
        3.44 |       .22 |      .031 |         111 |         7.1 | 
        6.78 |      .219 |      .077 |        88.1 |        2.84 | str_12 str_32 str_4
        5.41 |      .157 |      .062 |        87.2 |        2.53 | double1 double2 double3
        5.63 |      .157 |      .063 |        89.3 |        2.49 | int1 int2 int3
        6.03 |         . |      .061 |        98.9 |           . | int1 str_32 double1

--------------------------------------------------------------------------------
bench_collapse, oncollision(error) style(full) vars(1)
--------------------------------------------------------------------------------












Benchmark vs collapse (in seconds)
    - obs:     50,000
    - groups:  10,000
    - vars:    x1-x15 ~ N(0, 10)
    - stats:   sum
    - options: fast


    collapse | fcollapse | gcollapse | ratio (c/g) | ratio (f/g) | varlist
    -------- | --------- | --------- | ----------- | ----------- | -------
        .171 |      .047 |      .047 |        3.64 |           1 | 
        .938 |      .155 |      .078 |          12 |        1.99 | str_12 str_32 str_4
        .828 |      .094 |      .062 |        13.4 |        1.52 | double1 double2 double3
        .766 |      .094 |      .062 |        12.4 |        1.52 | int1 int2 int3
        .891 |         . |      .077 |        11.6 |           . | int1 str_32 double1

--------------------------------------------------------------------------------
bench_collapse, oncollision(error) style(sum) vars(15)
--------------------------------------------------------------------------------












Benchmark vs collapse (in seconds)
    - obs:     50,000
    - groups:  10,000
    - vars:    x1-x6 ~ N(0, 10)
    - stats:   mean median min max
    - options: fast


    collapse | fcollapse | gcollapse | ratio (c/g) | ratio (f/g) | varlist
    -------- | --------- | --------- | ----------- | ----------- | -------
        1.64 |      .141 |      .063 |          26 |        2.24 | 
        2.89 |      .516 |      .078 |        37.1 |        6.62 | str_12 str_32 str_4
        1.48 |      .437 |      .063 |        23.6 |        6.94 | double1 double2 double3
        2.44 |      .438 |      .078 |        31.2 |        5.62 | int1 int2 int3
        1.66 |         . |      .079 |          21 |           . | int1 str_32 double1

--------------------------------------------------------------------------------
bench_collapse, oncollision(error) style(ftools) vars(6)
--------------------------------------------------------------------------------












Benchmark vs collapse (in seconds)
    - obs:     50,000
    - groups:  10,000
    - vars:    x1 ~ N(0, 10)
    - stats:   all available plus percentiles 10, 30, 70, 90
    - options: fast


    collapse | fcollapse | gcollapse | ratio (c/g) | ratio (f/g) | varlist
    -------- | --------- | --------- | ----------- | ----------- | -------
        1.61 |      .126 |      .031 |        51.9 |        4.06 | 
        3.92 |      .484 |      .063 |        62.3 |        7.68 | str_12 str_32 str_4
         3.5 |      .391 |      .063 |        55.5 |        6.21 | double1 double2 double3
        3.44 |       .36 |      .047 |        73.1 |        7.66 | int1 int2 int3
        3.61 |         . |      .077 |        46.9 |           . | int1 str_32 double1

--------------------------------------------------------------------------------
bench_collapse, oncollision(error) style(full) vars(1)
--------------------------------------------------------------------------------












Benchmark vs egen, obs = 100,000, J = 1,000 (in seconds)
     egen | fegen | gegen | ratio (e/g) | ratio (f/g) | varlist
     ---- | ----- | ----- | ----------- | ----------- | -------
     .297 |  .093 |  .032 |        9.28 |        2.91 | str_12
     .235 |   .11 |  .031 |        7.58 |        3.55 | str_12 str_32
     .235 |  .125 |  .031 |        7.58 |        4.03 | str_12 str_32 str_4
     .219 |  .047 |  .016 |        13.7 |        2.94 | double1
     .188 |  .063 |  .016 |        11.8 |        3.94 | double1 double2
     .219 |  .062 |  .016 |        13.7 |        3.88 | double1 double2 double3
     .188 |  .047 |  .016 |        11.8 |        2.94 | int1
     .187 |  .047 |   .03 |        6.23 |        1.57 | int1 int2
     .203 |  .047 |  .031 |        6.55 |        1.52 | int1 int2 int3
     .219 |     . |  .031 |        7.06 |           . | int1 str_32 double1
     .265 |     . |  .047 |        5.64 |           . | int1 str_32 double1 int2 str_12 double2
     .282 |     . |  .046 |        6.13 |           . | int1 str_32 double1 int2 str_12 double2 int3 str_4 double3

--------------------------------------------------------------------------------
bench_egen, oncollision(error)
--------------------------------------------------------------------------------












Benchmark vs isid, obs = 100,000, all calls include an index to ensure uniqueness (in seconds)
     isid | fisid | gisid | ratio (i/g) | ratio (f/g) | varlist
     ---- | ----- | ----- | ----------- | ----------- | -------
     .516 |  .344 |  .031 |        16.6 |        11.1 | str_12
     .438 |  .407 |  .031 |        14.1 |        13.1 | str_12 str_32
       .5 |  .485 |  .031 |        16.1 |        15.6 | str_12 str_32 str_4
     .344 |  .125 |  .016 |        21.5 |        7.81 | double1
      .36 |  .141 |  .016 |        22.5 |        8.81 | double1 double2
     .375 |  .157 |  .016 |        23.4 |        9.81 | double1 double2 double3
     .437 |  .124 |  .031 |        14.1 |           4 | int1
      .36 |  .125 |  .016 |        22.5 |        7.81 | int1 int2
     .375 |  .172 |  .016 |        23.4 |        10.8 | int1 int2 int3
     .422 |     . |  .032 |        13.2 |           . | int1 str_32 double1
     .484 |     . |  .047 |        10.3 |           . | int1 str_32 double1 int2 str_12 double2
     .531 |     . |  .047 |        11.3 |           . | int1 str_32 double1 int2 str_12 double2 int3 str_4 double3


Benchmark vs isid, obs = 100,000, J = 1,000 (in seconds)
     isid | fisid | gisid | ratio (i/g) | ratio (f/g) | varlist
     ---- | ----- | ----- | ----------- | ----------- | -------
     .141 |  .109 |  .015 |         9.4 |        7.27 | str_12
     .172 |  .188 |  .016 |        10.8 |        11.8 | str_12 str_32
     .171 |  .219 |  .016 |        10.7 |        13.7 | str_12 str_32 str_4
     .125 |  .047 |  .015 |        8.33 |        3.13 | double1
     .126 |  .079 |  .015 |         8.4 |        5.27 | double1 double2
      .14 |  .094 |  .015 |        9.33 |        6.27 | double1 double2 double3
     .109 |  .016 |  .015 |        7.27 |        1.07 | int1
     .158 |  .031 |  .016 |        9.88 |        1.94 | int1 int2
      .14 |  .079 |  .031 |        4.52 |        2.55 | int1 int2 int3
     .157 |     . |  .016 |        9.81 |           . | int1 str_32 double1
     .171 |     . |  .032 |        5.34 |           . | int1 str_32 double1 int2 str_12 double2
     .187 |     . |  .031 |        6.03 |           . | int1 str_32 double1 int2 str_12 double2 int3 str_4 double3

--------------------------------------------------------------------------------
bench_isid, oncollision(error)
--------------------------------------------------------------------------------












Benchmark vs levelsof, obs = 100,000, J = 100 (in seconds)
    levelsof | flevelsof | glevelsof | ratio (l/g) | ratio (f/g) | varlist
    -------- | --------- | --------- | ----------- | ----------- | -------
        .219 |      .219 |      .015 |        14.6 |        14.6 | str_12
        .204 |      .203 |      .016 |        12.8 |        12.7 | str_32
        .203 |      .218 |      .015 |        13.5 |        14.5 | str_4
        .047 |      .047 |      .016 |        2.94 |        2.94 | double1
        .032 |      .031 |      .015 |        2.13 |        2.07 | double2
        .047 |      .031 |      .015 |        3.13 |        2.07 | double3
        .047 |      .047 |         0 |           . |           . | int1
        .033 |      .016 |         0 |           . |           . | int2
        .047 |      .032 |         0 |           . |           . | int3

--------------------------------------------------------------------------------
bench_levelsof, oncollision(error)
--------------------------------------------------------------------------------












Benchmark vs unique, obs = 100,000, all calls include an index to ensure uniqueness (in seconds)
     unique | funique | gunique | ratio (u/g) | ratio (f/g) | varlist
     ------ | ------- | ------- | ----------- | ----------- | -------
       .422 |    .546 |    .032 |        13.2 |        17.1 | str_12
       .468 |    .719 |    .032 |        14.6 |        22.5 | str_12 str_32
       .438 |    .891 |    .047 |        9.32 |          19 | str_12 str_32 str_4
       .344 |    .172 |    .016 |        21.5 |        10.8 | double1
        .36 |    .173 |     .03 |          12 |        5.77 | double1 double2
       .453 |    .187 |    .031 |        14.6 |        6.03 | double1 double2 double3
       .329 |    .172 |    .016 |        20.6 |        10.8 | int1
       .344 |    .203 |    .032 |        10.8 |        6.34 | int1 int2
       .363 |    .203 |    .015 |        24.2 |        13.5 | int1 int2 int3
       .391 |       . |    .031 |        12.6 |           . | int1 str_32 double1
       .437 |       . |    .062 |        7.05 |           . | int1 str_32 double1 int2 str_12 double2
       .468 |       . |    .047 |        9.96 |           . | int1 str_32 double1 int2 str_12 double2 int3 str_4 double3


Benchmark vs unique, obs = 100,000, J = 1,000 (in seconds)
     unique | funique | gunique | ratio (i/g) | ratio (f/g) | varlist
     ------ | ------- | ------- | ----------- | ----------- | -------
       .188 |     .11 |    .032 |        5.88 |        3.44 | str_12
       .203 |    .155 |    .031 |        6.55 |           5 | str_12 str_32
       .204 |    .203 |    .032 |        6.37 |        6.34 | str_12 str_32 str_4
       .172 |    .047 |    .016 |        10.8 |        2.94 | double1
       .156 |    .078 |    .016 |        9.75 |        4.88 | double1 double2
       .172 |    .077 |    .015 |        11.5 |        5.13 | double1 double2 double3
       .156 |    .031 |       0 |           . |           . | int1
       .171 |    .031 |    .016 |        10.7 |        1.94 | int1 int2
       .188 |    .094 |    .031 |        6.06 |        3.03 | int1 int2 int3
       .203 |       . |    .031 |        6.55 |           . | int1 str_32 double1
       .203 |       . |    .047 |        4.32 |           . | int1 str_32 double1 int2 str_12 double2
       .249 |       . |    .062 |        4.02 |           . | int1 str_32 double1 int2 str_12 double2 int3 str_4 double3

--------------------------------------------------------------------------------
bench_unique, oncollision(error)
--------------------------------------------------------------------------------



Benchmark vs gsort, obs = 10,000, J = 1,000 (in seconds; datasets are compared via cf)
    gsort | hashsort | ratio (g/h) | varlist
    ----- | -------- | ----------- | -------
     .016 |        0 |           . | -str_12
     .015 |        0 |           . | str_12 -str_32
     .031 |        0 |           . | str_12 -str_32 str_4
     .016 |     .016 |           1 | -double1
     .031 |     .015 |        2.07 | double1 -double2
     .016 |        0 |           . | double1 -double2 double3
     .016 |        0 |           . | -int1
        0 |     .016 |           0 | int1 -int2
     .031 |     .015 |        2.07 | int1 -int2 int3
     .031 |     .016 |        1.94 | -int1 -str_32 -double1
     .062 |        0 |           . | int1 -str_32 double1 -int2 str_12 -double2
     .094 |     .015 |        6.27 | int1 -str_32 double1 -int2 str_12 -double2 int3 -str_4 double3


Benchmark vs sort, obs = 100,000, J = 1,000 (in seconds; datasets are compared via cf)
     sort | fsort | hashsort | ratio (s/h) | ratio (f/h) | varlist
     ---- | ----- | -------- | ----------- | ----------- | -------
      .14 |  .109 |     .063 |        2.22 |        1.73 | str_12
     .188 |  .172 |     .083 |        2.27 |        2.07 | str_12 str_32
     .172 |  .203 |     .078 |        2.21 |         2.6 | str_12 str_32 str_4
      .11 |  .078 |     .062 |        1.77 |        1.26 | double1
      .11 |  .093 |     .047 |        2.34 |        1.98 | double1 double2
     .125 |  .109 |     .062 |        2.02 |        1.76 | double1 double2 double3
     .125 |  .062 |     .047 |        2.66 |        1.32 | int1
     .125 |  .094 |     .063 |        1.98 |        1.49 | int1 int2
     .141 |  .109 |     .063 |        2.24 |        1.73 | int1 int2 int3
     .125 |     . |     .094 |        1.33 |           . | int1 str_32 double1
     .203 |     . |     .093 |        2.18 |           . | int1 str_32 double1 int2 str_12 double2
     .202 |     . |     .094 |        2.15 |           . | int1 str_32 double1 int2 str_12 double2 int3 str_4 double3

--------------------------------------------------------------------------------
compare_hashsort, oncollision(error)
--------------------------------------------------------------------------------


End: 15:49:31 25 Oct 2017
tests ran

tests finished running

Start: 15:27:40 25 Oct 2017
End: 15:49:31 25 Oct 2017

. 
end of do-file

. log close _all
      name:  <unnamed>
       log:  C:\cygwin64\home\mauricio\hashing\build\gtools_tests_windows.log
  log type:  text
 closed on:  25 Oct 2017, 15:53:31
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
